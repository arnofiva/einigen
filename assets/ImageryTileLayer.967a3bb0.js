import{dK as pt,lV as Z,eq as nt,au as ze,a3 as C,_ as Ne,a1 as E,Y as A,bZ as at,gP as yt,sy as ot,fg as gt,e as I,y as R,en as lt,a as X,H as xt,cd as wt,e$ as We,I as W,L as It,ea as bt,aT as ct,a6 as Pe,ao as St,fi as Rt,hx as vt,cC as Tt,dP as _t,dO as kt,dQ as Ft,dR as Mt,Q as ue,q as Ct,T as Pt,G as $t,e0 as Ot,e3 as Bt,v as Dt}from"./index.da161cf1.js";import{l as zt}from"./ArcGISService.116191b2.js";import{a as Nt}from"./BlendLayer.eacc4944.js";import{o as Jt}from"./CustomParametersMixin.244652a9.js";import{r as ut,D as Et,s as At,u as Ht,p as ht,c as Lt,N as $e,l as Wt,d as qt,b as Gt,h as jt,o as qe,v as Ut,w as Ge,Q as je,E as Ue,g as Vt,L as Yt,q as Xt,k as Ve,t as Kt,e as Qt,a as Zt}from"./ImageHistogramParameters.c7315391.js";import{U as _e,j as ei,N as ye,R as ft,I as ti,a as ii,O as si,a2 as ri,u as ee,f as ni,m as ai,s as oi,L as li,a3 as Ye,b as ge,W as ci,h as ui,a4 as Je,P as hi,a5 as fi,a6 as di,a7 as mi,a8 as pi,a9 as yi,aa as gi,ab as xe,ac as xi,ad as wi,ae as Ii}from"./dataUtils.cbb4073f.js";import{k as Oe,K as we,_ as Xe,i as Ke,n as bi,Q as ke,q as Se,$ as Si,V as Ri,C as vi,J as Ti}from"./rasterProjectionHelper.b292b8c5.js";import{d as Ee}from"./FeatureSet.97dc0f24.js";import{_ as Be,f as _i,i as ki,y as Ae,n as Fi,h as Mi}from"./utils.74c24531.js";import{j as Ci}from"./PortalLayer.9c2e677f.js";import{t as Pi}from"./ScaleRangeLayer.1a5bb9a6.js";import{a as $i}from"./TemporalLayer.5874b62b.js";import{T as Oi}from"./TilemapCache.dd73177a.js";import{p as Bi}from"./popupUtils.f5ffced0.js";import"./jsonUtils.1c231e28.js";import"./UniqueValueRenderer.0143139a.js";import"./ColorStop.f762bde8.js";import"./diffUtils.f0876598.js";import"./colorRamps.80cb140e.js";import"./normalizeUtils.54c24a4d.js";import"./normalizeUtilsCommon.87227ae2.js";import"./generateRendererUtils.e8dfecdf.js";import"./colorUtils.307b1728.js";import"./portalItemUtils.ea6f2bf4.js";class Di{constructor(e=15e3,r=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,r)}decreaseRefCount(e,r){const t=e+"/"+r,s=this._cachedBlocks;if(s.has(t)){const n=s.get(t);return n.refCount--,n.refCount<=0&&(s.delete(t),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,r){const t=e+"/"+r,s=this._cachedBlocks;if(s.has(t)){const n=s.get(t);return n.ts=Date.now(),n.refCount++,s.delete(t),s.set(t,n),n.block}return null}putBlock(e,r,t,s){const n=this._cachedBlocks,a=e+"/"+r;if(n.has(a)){const l=n.get(a);l.ts=Date.now(),l.refCount++}else n.set(a,{block:t,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,r){const t=this._cachedBlocks,s=e+"/"+r;t.has(s)&&t.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const r=Array.from(e),t=Date.now();for(let s=0;s<r.length&&r[s][1].ts<=t-this._duration;s++)e.delete(r[s][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const r=Array.from(e);for(let t=0;t<r.length-this._size;t++)e.delete(r[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}}const ve=new Map,ie=new Di;function Qe(i,e){return e==null?i:`${i}?sliceId=${e}`}function zi(i,e,r){const t=ve.get(i);if(!t)return e==null?ie.decreaseRefCount(i,r):0;if(e==null||t[e]==null)return ie.decreaseRefCount(i,r);const s=t[e]?.cache,n=s?.get(r);if(s&&n){if(n.refCount--,n.refCount===0){s.delete(r);for(let a=0;a<t.length;a++)t[a]?.cache.delete(r);n.controller&&n.controller.abort()}return n.refCount}return 0}function Ze(i,e,r){const t=ve.get(i);if(!t)return e==null?ie.getBlock(i,r):null;if(e==null||t[e]==null){for(let n=0;n<t.length;n++){const a=t[n]?.cache.get(r);if(a)return a.refCount++,a.block}return ie.getBlock(i,r)}const s=t[e]?.cache.get(r);if(s)return s.refCount++,s.block;for(let n=0;n<t.length;n++){if(n===e||!t[n])continue;const a=t[n]?.cache,l=a?.get(r);if(a&&l)return l.refCount++,a.set(r,l),l.block}return null}function et(i,e,r,t,s=null){const n=ve.get(i);if(!n)return void(e==null&&ie.putBlock(i,r,t,s));if(e==null||n[e]==null)return void ie.putBlock(i,r,t,s);const a={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:s};t.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),n[e]?.cache.set(r,a)}function Ni(i,e,r){const t=ve.get(i);t?e!=null&&t[e]!=null?t[e]?.cache.delete(r):ie.deleteBlock(i,r):e==null&&ie.deleteBlock(i,r)}const tt=8,Ji=256;let H=class extends pt(xt){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const i=Oe();this.addResolvingPromise(i),await this.when()}normalizeCtorArgs(i){return i&&i.ioConfig&&(i={...i,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:Z.create(),...i.ioConfig}}),i}get _isGlobalWrappableSource(){const{rasterInfo:i}=this,e=we(i.spatialReference);return e!=null&&i.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:i}=this.rasterInfo;return i==null||i.type==="gcs-shift"}set rasterJobHandler(i){this._set("rasterJobHandler",i),this.datasetFormat==="Function"&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=i)}set url(i){this._set("url",nt(i,ze.getLogger(this)))}async open(i){throw new C("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(i,e,r,t={}){const s=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(i,e,r,s);return this.fetchPixels(n,s.size[0],s.size[1],t)}async identify(i,e={}){i=Ne(E,i).clone().normalize();const{multidimensionalDefinition:r,timeExtent:t}=e,{rasterInfo:s}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=s;let{transposedVariableName:l}=e;const o=a!=null&&n&&(t!=null||ut(r));o&&!l&&(l=r!=null&&r.length>0?r[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:l}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=s,{datumTransformation:f}=e;let h=Xe(i,c,f);if(!u.intersects(h))return{location:h,value:null};if(s.transform!=null){const F=s.transform.inverseTransform(h);if(!s.nativeExtent.intersects(F))return{location:F,value:null};h=F}let m=0;const p=l!=null&&a!=null&&s.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const F=this.primaryRasters.rasters[0];if(p)return F.identify(h,e);const{pixelSize:$}=s,P=3,z=$.x*P/2,O=$.y*P/2,B=new A({xmin:h.x-z,xmax:h.x+z,ymin:h.y-O,ymax:h.y+O,spatialReference:c}),N={interpolation:"nearest"},{pixelBlock:D}=await F.fetchPixels(B,P,P,N),{pixelBlock:q}=await this.fetchPixels(B,P,P,N);if(D==null)return{location:h,value:null};const G=Math.floor(P*P*.5),K=!D.mask||D.mask[G]?D.pixels.map(U=>U[G]):null;let se;return q!=null&&(se=!q.mask||q.mask[G]?q.pixels.map(U=>U[G]):void 0),{location:h,value:K,processedValue:se,pyramidLevel:0}}if(!p){if(e.srcResolution)m=Ke(e.srcResolution,s,this.ioConfig.sampling).pyramidLevel;else if(m=await this.computeBestPyramidLevelForLocation(i,e),m==null)return{location:h,value:null}}const g=this.identifyPixelLocation(h,m,null,p);if(g===null)return{location:h,value:null};const{row:d,col:y,rowOffset:x,colOffset:w,blockWidth:v}=g,T=l??e.sliceId,S=Qe(this.url,T),b=`${m}/${d}/${y}`;let k=Ze(S,null,b);k==null&&(k=this.fetchRawTile(m,d,y,e),et(S,null,b,k));const M=await k;if(M==null||!M.pixels?.length)return{location:h,value:null};const _=x*v+w;return this._processIdentifyResult(M,{srcLocation:h,position:_,pyramidLevel:m,useTransposedTile:!!p,requestSomeSlices:o,identifyOptions:e})}async fetchPixels(i,e,r,t={}){i=bi(i),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:s}=this;if(t.requestRawData&&s)return this._fetchPixels(i,e,r,t);const n=we(i.spatialReference),a=ke(i);if(n==null||a===0||a===1&&this._isGlobalWrappableSource&&s)return this._fetchPixels(i,e,r,t);if(a>=3)return{extent:i,pixelBlock:null};const l=[],{xmin:o,xmax:c}=i,u=Math.round(n/(c-o)*e),f=u-Math.round((n/2-o)/(c-o)*e);let h=0;const m=[];for(let y=0;y<=a;y++){const x=new A({xmin:y===0?o:-n/2,xmax:y===a?c-n*y:n/2,ymin:i.ymin,ymax:i.ymax,spatialReference:i.spatialReference}),w=y===0?u-f:y===a?e-h:u;h+=w,m.push(w);const v=t.disableWrapAround&&y>0?null:this._fetchPixels(x,w,r,t);l.push(v)}const p=(await Promise.all(l)).map(y=>y?.pixelBlock);let g=null;const d={width:e,height:r};return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:d,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},t)).pixelBlock:g=_e(p,d,{blockWidths:m}),{extent:i,srcExtent:Se(i,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:g}}async fetchRawPixels(i,e,r,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const s=await this._fetchRawTiles(i,e,r,t),{nativeExtent:n,nativePixelSize:a,storageInfo:l}=this.rasterInfo,o=2**i,c=a.x*o,u=a.y*o,f=new A({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+r.width-1),ymin:n.ymax-u*(e.y+r.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!s)return{extent:f,srcExtent:f,pixelBlock:null};const{pixelBlocks:h,mosaicSize:m}=s;if(h.length===1&&h[0]!=null&&h[0].width===r.width&&h[0].height===r.height)return{extent:f,srcExtent:f,pixelBlock:s.pixelBlocks[0]};const p=i>0?l.pyramidBlockWidth:l.blockWidth,g=i>0?l.pyramidBlockHeight:l.blockHeight,d={x:e.x%p,y:e.y%g};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:h,srcMosaicSize:m,destDimension:r,clipOffset:d,clipSize:r,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:y=_e(h,m,{clipOffset:d,clipSize:r}),{extent:f,srcExtent:f,pixelBlock:y}}fetchRawTile(i,e,r,t){throw new C("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(i){return Se(this.rasterInfo.extent,i)}decodePixelBlock(i,e){return!this.rasterJobHandler||e.useCanvas?ei(i,e):this.rasterJobHandler.decode({data:i,options:e})}async request(i,e,r=0){const{customFetchParameters:t}=this.ioConfig,{range:s,query:n,headers:a}=e;r=r??e.retryCount??this.ioConfig.retryCount;const l=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await at(i,{...e,query:{...n,...t},headers:{...a,...l}})}catch(o){if(r>0)return r--,this.request(i,e,r);throw o}}getSliceIndex(i){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||i==null||i.length===0?null:Et(i,e)}getTileExtentFromTileInfo(i,e,r,t){const s=yt(t.lodAt(i));return this.getTileExtent({x:s.resolution,y:s.resolution},e,r,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:i,spatialReference:e,extent:r,pixelSize:t}=this.rasterInfo;if(!i.tileInfo){const s=[],n=i.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),l=1/.0254*96*a;for(let c=0;c<=n;c++)s.push(new ot({level:n-c,resolution:a,scale:l})),a*=2,l*=2;const o=new E({x:r.xmin,y:r.ymax,spatialReference:e});i.tileInfo=new Z({origin:o,size:[i.blockWidth,i.blockHeight],spatialReference:e,lods:s}),i.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(i,e=512,r=512,t){const{width:s,height:n,nativeExtent:a,pixelSize:l,spatialReference:o}=i,c=new E({x:a.xmin,y:a.ymax,spatialReference:o});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(s,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[l],t);i.storageInfo=new ye({blockWidth:e,blockHeight:r,pyramidBlockWidth:e,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(i,e={}){return 0}computeBlockBoundary(i,e,r,t,s,n=0,a=2){if(s.length===1&&n>0){s=[...s];let{x:u,y:f}=s[0];for(let h=0;h<n;h++)u*=a,f*=a,s.push({x:u,y:f})}const l=[],{x:o,y:c}=t;for(let u=0;u<s.length;u++){const{x:f,y:h}=s[u];l.push({minCol:Math.floor((i.xmin-o+.1*f)/e/f),maxCol:Math.floor((i.xmax-o-.1*f)/e/f),minRow:Math.floor((c-i.ymax+.1*h)/r/h),maxRow:Math.floor((c-i.ymin-.1*h)/r/h)})}return l}getPyramidPixelSize(i){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:r,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(i===0)return e;if(r!=null&&r.length)return r[i-1];const s=t**i;return{x:e.x*s,y:e.y*s}}identifyPixelLocation(i,e,r,t){const{spatialReference:s,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:c}=a,u=t&&c!=null?c.tileSize[0]:a.blockWidth,f=t&&c!=null?c.tileSize[1]:a.blockHeight,h=Xe(i,s,r);if(!n.intersects(h)||e<0||e>l)return null;const m=this.getPyramidPixelSize(e),{x:p,y:g}=m,d=(o.y-h.y)/g/f,y=(h.x-o.x)/p/u,x=Math.min(f-1,Math.floor((d-Math.floor(d))*f)),w=Math.min(u-1,Math.floor((y-Math.floor(y))*u));return{pyramidLevel:e,row:Math.floor(d),col:Math.floor(y),rowOffset:x,colOffset:w,blockWidth:u,srcLocation:h}}getTileExtent(i,e,r,t,s,n){const[a,l]=n,o=t.x+r*a*i.x,c=o+a*i.x,u=t.y-e*l*i.y,f=u-l*i.y;return new A({xmin:o,xmax:c,ymin:f,ymax:u,spatialReference:s})}getBlockWidthHeight(i){return{blockWidth:i>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:i>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(i,e,r){const t=this.rasterInfo.storageInfo.blockBoundary[i];return!t||t.maxRow<e||t.maxCol<r||t.minRow>e||t.minCol>r}async _fetchPixels(i,e,r,t={}){let s=ke(i);if(s>=2)return{extent:i,pixelBlock:null};const n=this._getSourceDataInfo(i,e,r,t),{pyramidLevel:a,srcResolution:l,srcExtent:o,srcWidth:c,srcHeight:u,ul:f}=n;if(c===0||u===0)return{extent:i,srcExtent:o,pixelBlock:null};const{rasterInfo:h}=this,m=h.transform,p=m?.type==="gcs-shift",g=we(i.spatialReference)!=null;!p&&g||(s=ke(n.srcExtent,p));const d=await this._fetchRawTiles(a,f,{width:c,height:u,wrapCount:s},t);if(!d)return{extent:i,srcExtent:o,pixelBlock:null};const y=h.storageInfo,x=a>0?y.pyramidBlockWidth:y.blockWidth,w=a>0?y.pyramidBlockHeight:y.blockHeight;let{x:v,y:T}=h.pixelSize;if(a>0){const{pyramidResolutions:Q,pyramidScalingFactor:mt}=y;if(Q!=null&&Q[a-1])({x:v,y:T}=Q[a-1]);else{const Le=mt**a;v*=Le,T*=Le}}const S=h.spatialReference,b=new E({x:v,y:T,spatialReference:S}),k=x===c&&w===u&&f.x%x==0&&f.y%w==0,M=new E({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/r,spatialReference:i.spatialReference}),_=!i.spatialReference.equals(S),F=S.isGeographic?1e-9:1e-4,{datumTransformation:$}=t;if(!_&&k&&d.pixelBlocks.length===1&&x===e&&w===r&&this._isSameResolution(l,M,F))return{extent:i,srcExtent:o,srcTilePixelSize:b,pixelBlock:d.pixelBlocks[0]};const P=g&&we(o.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,z=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");z&&!this.rasterJobHandler&&await Oe();const O=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:M.toJSON(),datumTransformation:$,rasterTransform:m,hasWrapAround:s>0||P,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:z},t):Si({projectedExtent:i,srcBufferExtent:d.extent,pixelSize:M,datumTransformation:$,rasterTransform:m,hasWrapAround:s>0||P,isAdaptive:!1,includeGCSGrid:z});let B;const N=!t.requestRawData,D={rows:O.spacing[0],cols:O.spacing[1]},q=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,d.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:K,isPartiallyFilled:se}=d;let U=null;if(this.rasterJobHandler)({pixelBlock:B,localNorthDirections:U}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:K,destDimension:N?{width:e,height:r}:null,coefs:N?O.coefficients:null,sampleSpacing:N?D:null,projectDirections:z,gcsGrid:z?O.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:q,blockWidths:null},t));else{const Q=_e(G,K,{alignmentInfo:q});B=N?ft(Q,{width:e,height:r},O.coefficients,D,t.interpolation):Q,z&&O.gcsGrid&&(U=ti({width:e,height:r},O.gcsGrid),B=ii(B,this.rasterInfo.dataType,U))}return t.requestRawData||z?{extent:i,srcExtent:o,srcTilePixelSize:b,pixelBlock:B,transformGrid:O,localNorthDirections:U,isPartiallyFilled:se}:{extent:i,srcExtent:o,srcTilePixelSize:b,pixelBlock:B}}async _fetchRawTiles(i,e,r,t){const{origin:s,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:l}=this.getBlockWidthHeight(i);let{x:o,y:c}=e,{width:u,height:f,wrapCount:h}=r;const m=this._getRasterTileAlignmentInfo(i,0);t.buffer&&(o-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,f+=2*t.buffer.rows);let p=0,g=0,d=0;h&&m!=null&&({worldColumnCountFromOrigin:g,originColumnOffset:d,rightPadding:p}=m,g*m.blockWidth-p>=o+u&&(p=0));const y=Math.floor(o/a),x=Math.floor(c/l),w=Math.floor((o+u+p-1)/a),v=Math.floor((c+f+p-1)/l),T=n[i];if(!T)return null;const{minRow:S,minCol:b,maxCol:k,maxRow:M}=T;if(h===0&&(v<S||w<b||x>M||y>k))return null;const _=new Array;let F=!1;const $=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let q=x;q<=v;q++)for(let G=y;G<=w;G++){let K=G;if(!t.disableWrapAround&&h&&m!=null&&g<=G&&(K=G-g-d),q>=S&&K>=b&&M>=q&&k>=K){const se=this._fetchRawTile(i,q,K,t);$?_.push(new Promise(U=>{se.then(Q=>U(Q)).catch(()=>{F=!0,U(null)})})):_.push(se)}else _.push(Promise.resolve(null))}if(_.length===0)return null;const P=await Promise.all(_),z={height:(v-x+1)*l,width:(w-y+1)*a},{spatialReference:O}=this.rasterInfo,B=this.getPyramidPixelSize(i),{x:N,y:D}=B;return{extent:new A({xmin:s.x+y*a*N,xmax:s.x+(w+1)*a*N,ymin:s.y-(v+1)*l*D,ymax:s.y-x*l*D,spatialReference:O}),pixelBlocks:P,mosaicSize:z,isPartiallyFilled:F}}_isSameResolution(i,e,r){return Math.abs(i.x-e.x)<r&&Math.abs(i.y-e.y)<r}_fetchRawTile(i,e,r,t){const s=this.rasterInfo.storageInfo.blockBoundary[i];if(!s)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:l,maxRow:o}=s;if(e<n||r<a||e>o||r>l)return Promise.resolve(null);const c=Qe(this.url,t.sliceId),u=`${i}/${e}/${r}`;let f=Ze(c,t.registryId,u);if(f==null){const h=new AbortController;f=this.fetchRawTile(i,e,r,{...t,signal:h.signal}),et(c,t.registryId,u,f,h),f.catch(()=>Ni(c,t.registryId,u))}return t.signal&&gt(t,()=>{zi(c,t.registryId,u)}),f}_computeMagDirValues(i){const{bandCount:e,dataType:r}=this.rasterInfo;if(!(e===2&&r==="vector-magdir"||r==="vector-uv")||i?.length!==2||!i[0]?.length)return null;const t=i[0].length;if(r==="vector-magdir"){const o=i[1].map(c=>(c+360)%360);return[i[0],o]}const[s,n]=i,a=[],l=[];for(let o=0;o<t;o++){const[c,u]=si([s[o],n[o]]);a.push(c),l.push(u)}return[a,l]}_getRasterTileAlignmentInfo(i,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=Ri(this.rasterInfo)),this._rasterTileAlighmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[i]}}_getSourceDataInfo(i,e,r,t={}){const s={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(s.srcResolution=t.srcResolution,this._updateSourceDataInfo(i,s));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:l,pyramidLevel:o}=s,c=a/e,u=l/r,f=o<n&&c*u>=16,h=o===n&&this._requireTooManySrcTiles(a,l,e,r);if(f||h||a===0||l===0){const m=new E({x:(i.xmax-i.xmin)/e,y:(i.ymax-i.ymin)/r,spatialReference:i.spatialReference});let p=vi(m,this.rasterInfo.spatialReference,i,s.datumTransformation);const g=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(f&&t.srcResolution&&g){const d=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(n-o+3>=d){const y=2**d;p={x:t.srcResolution.x*y,y:t.srcResolution.y*y}}}p&&(s.srcResolution=p,this._updateSourceDataInfo(i,s))}return this._requireTooManySrcTiles(s.srcWidth,s.srcHeight,e,r)&&(s.srcWidth=0,s.srcHeight=0),s}_requireTooManySrcTiles(i,e,r,t){const{tileInfo:s}=this.rasterInfo.storageInfo;return Math.ceil(i/s.size[0])*Math.ceil(e/s.size[1])>=Ji||i/r>tt||e/t>tt}_updateSourceDataInfo(i,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:r}=this,t=r.spatialReference,{srcResolution:s,datumTransformation:n}=e,{pyramidLevel:a,pyramidResolution:l,excessiveReading:o}=Ke(s,r,this.ioConfig.sampling);if(o)return;let c=e.srcExtent||Se(i,t,n);if(c==null)return;const u=r.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:f,y:h}=r.storageInfo.origin,m=Math.floor((c.xmin-f)/l.x+.1),p=Math.floor((h-c.ymax)/l.y+.1),g=Math.floor((c.xmax-f)/l.x-.1),d=Math.floor((h-c.ymin)/l.y-.1),y=c.width<.1*l.x?0:g-m+1,x=c.height<.1*l.y?0:d-p+1;e.pyramidLevel=a,e.pyramidResolution=l,e.srcWidth=y,e.srcHeight=x,e.ul={x:m,y:p}}_getRequestOptionsWithSliceId(i){return this.rasterInfo.multidimensionalInfo!=null&&i.sliceId==null&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)}),i}_processIdentifyResult(i,e){const{srcLocation:r,position:t,pyramidLevel:s,useTransposedTile:n}=e,a=i.pixels[0].length/i.width/i.height;if(!(!i.mask||i.mask[t]))return{location:r,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(l==null||!n){const d=i.pixels.map(w=>w[t]),y={location:r,value:d,pyramidLevel:s},x=this._computeMagDirValues(d.map(w=>[w]));return x?.length&&(y.magdirValue=x.map(w=>w[0])),y}let o=i.pixels.map(d=>d.slice(t*a,t*a+a)),c=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:f}=e;let h=At(l,f.transposedVariableName);if(u){const d=Ht(h,f.multidimensionalDefinition,f.timeExtent);o=o.map(y=>d.map(x=>y[x])),c=c?.map(y=>d.map(x=>y[x])),h=d.map(y=>h[y])}const m=i.noDataValues||this.rasterInfo.noDataValue,p={pixels:o,pixelType:i.pixelType};let g;return m!=null&&(ri(p,m),g=p.mask),{location:r,value:null,dataSeries:h.map((d,y)=>{const x={value:g?.[y]===0?null:o.map(w=>w[y]),multidimensionalDefinition:d.multidimensionalDefinition.map(w=>new ht({...w,isSlice:!0}))};return c?.length&&(x.magdirValue=[c[0][y],c[1][y]]),x}),pyramidLevel:s}}};I([R()],H.prototype,"_rasterTileAlighmentInfo",void 0),I([R({readOnly:!0})],H.prototype,"_isGlobalWrappableSource",null),I([R({readOnly:!0})],H.prototype,"_hasNoneOrGCSShiftTransform",null),I([R()],H.prototype,"rasterJobHandler",null),I([R(lt)],H.prototype,"url",null),I([R({type:String,json:{write:!0}})],H.prototype,"datasetName",void 0),I([R({type:String,json:{write:!0}})],H.prototype,"datasetFormat",void 0),I([R()],H.prototype,"hasUniqueSourceStorageInfo",void 0),I([R()],H.prototype,"rasterInfo",void 0),I([R()],H.prototype,"ioConfig",void 0),I([R()],H.prototype,"sourceJSON",void 0),H=I([X("esri.layers.support.rasterDatasets.BaseRaster")],H);const le=H;let re=class extends le{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(i){await this.init();const{rasterFunction:e}=this;this.primaryRasters?.rasters?.length?e.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=e.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(c=>c.rasterJobHandler=this.rasterJobHandler));const{rasters:r,rasterIds:t}=this.primaryRasters,s=r.map(c=>c.rasterInfo?void 0:c.open(i));await Promise.all(s);const n=r.map(({rasterInfo:c})=>c),a=e.bind({rasterInfos:n,rasterIds:t});if(!a.success||n.length===0)throw new C("raster-function:open",`cannot bind the function: ${a.error??""}`);const l=e.functionName==="Table"?e:e.functionArguments?.raster;l?.functionName==="Table"&&(e.rasterInfo.attributeTable=Ee.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const o=n[0];this.hasUniqueSourceStorageInfo=n.length===1||n.slice(1).every(c=>this._hasSameStorageInfo(c,o)),this.set("sourceJSON",r[0].sourceJSON),this.set("rasterInfo",e.rasterInfo)}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(i,e,r,t={}){const{rasters:s,rasterIds:n}=this.primaryRasters;let a=!1;const{interpolation:l}=t,o=this.rasterFunction.flatWebGLFunctionChain?.hasSurfaceFunction;!t.requestRawData&&l!=="bilinear"&&o&&(a=s.length===1&&!t.skipRasterFunction,t={...t,interpolation:"bilinear",requestRawData:a});const c=s.map(x=>x.fetchPixels(i,e,r,t)),u=await Promise.all(c),f=u.map(x=>x.pixelBlock),h=a||t.requestRawData?u.map(x=>x.srcTilePixelSize):null;if(t.skipRasterFunction||f.every(x=>x==null))return u[0];const m=u.find(x=>x.pixelBlock!=null)?.extent??i,p=this.rasterJobHandler?await this.rasterJobHandler.process({extent:m,primaryPixelBlocks:f,primaryPixelSizes:h,primaryRasterIds:n}):this.rasterFunction.process({extent:m,primaryPixelBlocks:f,primaryPixelSizes:h,primaryRasterIds:n}),{transformGrid:g}=u[0];if(!a||p==null||g==null)return{...u[0],pixelBlock:p};const d={rows:g.spacing[0],cols:g.spacing[1]};let y;return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[p],srcMosaicSize:{width:p.width,height:p.height},destDimension:{width:e,height:r},coefs:g.coefficients,sampleSpacing:d,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},t)).pixelBlock:y=ft(p,{width:e,height:r},g.coefficients,d,l),{extent:i,srcExtent:u[0].srcExtent,pixelBlock:y}}_hasSameStorageInfo(i,e){const{storageInfo:r,pixelSize:t,spatialReference:s,extent:n}=i,{storageInfo:a,pixelSize:l,spatialReference:o,extent:c}=e;return t.x===l.x&&t.y===l.y&&s.equals(o)&&n.equals(c)&&r.blockHeight===a.blockHeight&&r.blockWidth===a.blockWidth&&r.maximumPyramidLevel===a.maximumPyramidLevel}};I([R({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),I([R()],re.prototype,"tileType",void 0),I([R()],re.prototype,"rasterFunction",void 0),I([R()],re.prototype,"primaryRasters",void 0),re=I([X("esri.layers.support.rasterDatasets.FunctionRaster")],re);const De=re;function Ei(i,e){if(i.spatialReference.equals(e))return i;const r=We(i.spatialReference),t=We(e);if(r===t)return i;const s=r/t;return{x:i.x*s,y:i.y*s}}async function Ai(i,e,r){if(r.type==="extent")return Li(i,e,r);const{width:t,height:s}=i,n=new Uint8Array(t*s),{contains:a,intersects:l}=await wt(()=>import("./geometryEngine.d168d102.js"),["assets/geometryEngine.d168d102.js","assets/geometryEngineBase.d1b13217.js","assets/index.da161cf1.js","assets/index.8db76e31.css","assets/hydrated.f8dda357.js"]);return l(e,r)?r.type==="polyline"?Wi(i,e,r):a(r,e)?i:Hi(i,e,r):new ee({pixelType:i.pixelType,width:t,height:s,mask:n,maskIsAlpha:!1,pixels:[...i.pixels]})}function Hi(i,e,r){if(!i)return i;const{width:t,height:s}=i,n=e.width/t,a=e.height/s,{xmin:l,ymax:o}=e;let c;if(r.type==="extent"){const d=(r.xmin-l)/n,y=(r.xmax-l)/n,x=(o-r.ymax)/a,w=(o-r.ymin)/a;c=[[[d,x],[d,w],[y,w],[y,x],[d,x]]]}else c=r.rings.map(d=>d.map(([y,x])=>[(y-l)/n,(o-x)/a]));const u=document.createElement("canvas");u.width=t,u.height=s;const f=u.getContext("2d");f.fillStyle="#f00",c.forEach(d=>{f.beginPath(),f.moveTo(d[0][0],d[0][1]);for(let y=0;y<d.length;y++)f.lineTo(d[y][0],d[y][1]);f.closePath(),f.fill()});const h=f.getImageData(0,0,t,s).data,m=i.mask,p=t*s,g=new Uint8Array(p);for(let d=0;d<p;d++)m&&!m[d]||(g[d]=h[4*d+3]>127?255:0);return new ee({pixelType:i.pixelType,width:t,height:s,mask:g,maskIsAlpha:!1,pixels:[...i.pixels]})}function Li(i,e,r){const{width:t,height:s}=i,n=new Uint8Array(t*s),a=e.width/t,l=e.height/s;if(r.width/a<.5||r.height/l<.5)return new ee({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]});const{xmin:o,xmax:c,ymin:u,ymax:f}=e,{xmin:h,xmax:m,ymin:p,ymax:g}=r,d=Math.max(o,h),y=Math.min(c,m),x=Math.max(u,p),w=Math.min(f,g),v=.5*a,T=.5*l;if(y-d<v||w-x<T||y<o+v||d>c-v||x>f-T||w<u+T)return new ee({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]});const S=Math.max(0,(d-o)/a),b=Math.min(t,Math.max(0,(y-o)/a)),k=Math.max(0,(f-w)/l),M=Math.min(s,Math.max(0,(f-x)/l)),_=Math.round(S),F=Math.round(b)-1,$=Math.round(k),P=Math.round(M)-1;if(_===F&&S%1>.5&&b%1<.5||$===P&&k%1>.5&&M%1<.5)return new ee({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]});if(_===0&&$===0&&F===t&&P===s)return i;const z=i.mask;for(let O=$;O<=P;O++)for(let B=_;B<=F;B++){const N=O*t+B;n[N]=z?z[N]:255}return new ee({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]})}function Wi(i,e,r){const{width:t,height:s}=i,n=new Uint8Array(t*s),a=e.width/t,l=e.height/s,{xmin:o,ymax:c}=e,{paths:u}=r,f=i.mask;for(let h=0;h<u.length;h++){const m=u[h];for(let p=0;p<m.length-1;p++){const[g,d]=m[p],[y,x]=m[p+1];let w=Math.floor((c-d)/l),v=Math.floor((c-x)/l);if(v<w){const S=w;w=v,v=S}w=Math.max(0,w),v=Math.min(s-1,v);const T=(y-g)/(x-d);for(let S=w;S<=v;S++){const b=S===w?Math.max(d,x):(s+1-S)*l,k=S===v?Math.min(d,x):b-l;let M=Math.floor(x===d?(g-o)/a:(T*(b-d)+g-o)/a),_=Math.floor(x===d?(y-o)/a:(T*(k-d)+g-o)/a);if(_<M){const $=M;M=_,_=$}const F=S*t;M=Math.max(0,M),_=Math.min(t-1,_);for(let $=F+M;$<=F+_;$++)n[$]=f?f[$]:255}}}return new ee({pixelType:i.pixelType,width:t,height:s,mask:n,pixels:[...i.pixels]})}function qi(i,e,r,t=!0){const{spatialReference:s}=i,{x:n,y:a}=Ei(r,s);let l,o,c;const u=e.type==="extent"?e:e.extent;let{xmin:f,xmax:h,ymax:m,ymin:p}=u;const{xmin:g,ymax:d}=i.extent;return t?(f=g+(f>g?n*Math.round((f-g)/n):0),m=d-(m<d?a*Math.round((d-m)/a):0),h=g+(h>g?n*Math.round((h-g)/n):0),p=d-(p<d?a*Math.round((d-p)/a):0),l=new A({xmin:f,ymax:m,xmax:h,ymin:p,spatialReference:s}),o=Math.round(l.width/n),c=Math.round(l.height/a)):(o=Math.floor((h-f)/n+.8),c=Math.floor((m-p)/a+.8),f=g+(f>g?n*Math.floor((f-g)/n+.1):0),m=d-(m<d?a*Math.floor((d-m)/a+.1):0),h=f+o*n,p=m-c*a,l=new A({xmin:f,ymax:m,xmax:h,ymin:p,spatialReference:s})),{extent:l,width:o,height:c}}const it=ze.getLogger("esri.layers.mixins.ImageryTileMixin"),Gi=i=>{let e=class extends i{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=t[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){t?.functionName?.toLowerCase()==="none"&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}set url(t){this._set("url",nt(t,it))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,s,n){const a=s?.layerDefinition?.drawingInfo?.renderer;return Gt(a,n)||void 0}async convertVectorFieldData(t,s){if(t==null||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:a},s):ni(t,a)}async computeStatisticsHistograms(t,s){t=Ne(jt,t).clone();const{rasterInfo:n}=this,{geometry:a}=t;if(a==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=a;const{spatialReference:o}=n;a.spatialReference.equals(o)||(await Oe(),l=a.type==="extent"?Se(a,o):Ti(a,o));const c=t.pixelSize??new E({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:o}),{extent:u,width:f,height:h}=qi(n,l,c),m=await this.fetchPixels(u,f,h,{...s,interpolation:"nearest"});if(m.pixelBlock==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await Ai(m.pixelBlock,u,l),g=this._rasterJobHandler.instance;return g?g.computeStatisticsHistograms({pixelBlock:p},s):ai(p)}async createFlowMesh(t,s){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(t,s):oi(t.meshType,t.simulationSettings,t.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){const{multidimensionalInfo:s}=this.rasterInfo??{};if(s==null)return t;let n=t.multidimensionalDefinition||this.multidimensionalDefinition;n!=null&&n.length||(n=qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(n!=null&&a!=null&&(a.start!=null||a.end!=null)){n=n.map(g=>g.clone());const l=s.variables.find(({name:g})=>g===n[0].variableName)?.dimensions?.find(({name:g})=>g==="StdTime"),o=n.find(({dimensionName:g})=>g==="StdTime");if(!l||!o)return{...t,multidimensionalDefinition:null};const{start:c,end:u}=a,f=c==null?null:c.getTime(),h=u==null?null:u.getTime(),m=f??h,p=h??f;if(l.values!=null){const g=l.values.filter(d=>{if(Array.isArray(d)){if(m===p)return d[0]<=m&&d[1]>=m;const y=d[0]<=m&&d[1]>m||d[0]<p&&d[1]>=p,x=d[0]>=m&&d[1]<=p||d[0]<m&&d[1]>p;return y||x}return m===p?d===m:d>=m&&d<=p});if(g.length){const d=g.sort((y,x)=>{const w=Array.isArray(y)?y[0]:y,v=Array.isArray(y)?y[1]:y,T=Array.isArray(x)?x[0]:x,S=Array.isArray(x)?x[1]:x;return m===p?w-T:Math.abs(v-p)-Math.abs(S-p)})[0];o.values=[d]}else n=null}else if(l.hasRegularIntervals&&l.extent){const[g,d]=l.extent;m>d||p<g?n=null:o.values=m===p?[m]:[Math.max(g,m),Math.min(d,p)]}}return n!=null&&Ut(n,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:n}}async updateRasterFunction(){if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const u=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&u&&this._set("rasterFunction",$e.fromJSON(u)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let t,s=this.raster,n=!1;s.datasetFormat==="Function"?(t=s.primaryRasters.rasters,s=t[0],n=!0):t=[s];const{rasterFunction:a}=this;if(a){const u={raster:s};t.length>1&&t.forEach(m=>u[m.url]=m);const f=Be(a.functionDefinition?.toJSON()??a.toJSON(),u),h=new De({rasterFunction:f});h.rasterJobHandler=this._rasterJobHandler.instance,await h.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=h}else this.raster=s,this._cachedRasterFunctionJson=null,await s.when();if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:l}=this,{bandCount:o}=this.raster.rasterInfo,c=l?.length?l.some(u=>u>=o):o>=3;l&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:s}=this;if(!t||!s||!this.renderer)return;const{rasterInfo:n}=this.raster,a=Ge(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),l=a?.name,o=je({...this.renderer.toJSON(),variableName:l});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(o))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=Ue(n,l),s.rendererJSON=o,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=o)}async applyRenderer(t,s){const n=t&&t.pixelBlock;if(!(n!=null&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const l=this._rasterJobHandler.instance,o=this.bandIds??[];return a=l?await l.symbolize({...t,simpleStretchParams:s,bandIds:o}):this.symbolizer.symbolize({...t,simpleStretchParams:s,bandIds:o}),a}getTileUrl(t,s,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${s}/${n}`:""}getCompatibleTileInfo(t,s,n=!1){if(!this.loaded||s==null)return null;if(n&&t.equals(this.spatialReference))return this.tileInfo;const a=bt(t);return Z.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,s,n,a={}){if(r(this),a.requestAsImageElement){const o=this.getTileUrl(t,s,n);return at(o,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(c=>c.data)}const{rasterInfo:l}=this;if(l.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null){const o=a.tileInfo||l.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,s,n,o),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,s,n,a)}async fetchPixels(t,s,n,a={}){return this.rasterInfo.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),n=Math.round(n),this.raster.fetchPixels(t,s,n,a))}async identify(t,s={}){const{raster:n,rasterInfo:a}=this;if(a.multidimensionalInfo!=null&&!(a.hasMultidimensionalTranspose&&!!(ut(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:t,value:null};const l=this.multidimensionalSubset?.areaOfInterest;if(l&&!l.contains(t))throw new C("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(t,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.rasterInfo?.multidimensionalInfo;if(t==null||this.rasterInfo?.dataType!=="standard-time")return!1;const s=this.multidimensionalDefinition,n=s?.[0]?.variableName;return t.variables.some(a=>a.name===n&&(!s?.[0].dimensionName||a.dimensions.some(l=>l.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){const s=t??this.rasterInfo?.multidimensionalInfo;return Vt(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new Kt;return this._rasterJobHandler.connectionPromise=t.initialize().then(async()=>{r(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){r(this);const{raster:t}=this,s=Yt(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(t="no"){r(this);const{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=Xt(s));const n=Ge(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=n?.name;if(!this.renderer||t==="override"){const u=Ve(s,{bandIds:this.bandIds,variableName:a}),f=s.statistics,h=f&&f.length>0?f[0]:null,m=h?.max??0,p=h?.min??0;this.raster.datasetFormat==="WCSServer"&&u.type==="raster-stretch"&&(m>1e24||p<-1e24)&&(u.dynamicRangeAdjustment=!0,u.statistics=null,u.stretchType==="none"&&(u.stretchType="min-max")),this.renderer=u}const l=je({...this.renderer.toJSON(),variableName:a}),o=Ue(s,a);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=o):this.symbolizer=new li({rendererJSON:l,rasterInfo:o});const c=this.symbolizer.bind();if(c.success){if(t==="auto"){const{colormap:u}=this.raster.rasterInfo,f=this.renderer;if(u!=null&&f.type==="raster-colormap"){const h=Ve(this.raster.rasterInfo);JSON.stringify(h)!==JSON.stringify(f)&&this._configDefaultRenderer("override")}else if(f.type==="raster-stretch"){const h=this.bandIds?.length,m=f.statistics?.length;!f.dynamicRangeAdjustment&&m&&h&&m!==h&&this._configDefaultRenderer("override")}}}else it.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function r(t){if(!t.raster||!t.rasterInfo)throw new C("imagery-tile","no raster")}return I([R()],e.prototype,"_cachedRendererJson",void 0),I([R()],e.prototype,"_cachedRasterFunctionJson",void 0),I([R()],e.prototype,"_compatibleFullExtent",void 0),I([R()],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([R()],e.prototype,"_rasterJobHandler",void 0),I([R()],e.prototype,"bandIds",void 0),I([R({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([R({json:{read:!1}})],e.prototype,"fullExtent",null),I([R()],e.prototype,"interpolation",void 0),I([R()],e.prototype,"ioConfig",void 0),I([R({type:[ht],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([R({type:Lt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([R()],e.prototype,"raster",void 0),I([R({type:$e,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),I([R()],e.prototype,"rasterInfo",void 0),I([R()],e.prototype,"sourceJSON",void 0),I([R({readOnly:!0,type:W,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([R({type:Z})],e.prototype,"tileInfo",void 0),I([R(lt)],e.prototype,"url",null),I([R({types:Wt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const t=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:qt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),I([It("renderer")],e.prototype,"readRenderer",null),I([R()],e.prototype,"symbolizer",void 0),e=I([X("esri.layers.ImageryTileMixin")],e),e};function ji(i){const e=i.fields,r=i.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=s.map(c=>c.name),a=[];let l=0,o=0;return r.forEach(c=>{const u={};for(u[t]=l++,o=1;o<n.length;o++)u[n[o]]=c[o-1];a.push({attributes:u})}),{displayFieldName:"",fields:s,features:a}}class dt{static get supportedVersions(){return[5]}static parse(e){const r=new DataView(e),t=3&r.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const s=r.getUint32(4,!0),n=r.getUint16(8,!0),a=r.getUint16(10,!0),l={version:t,recordCount:s,headerByteCount:n,recordByteCount:a};let o=32;const c=[],u=[];let f;if(t===3){for(;r.getUint8(o)!==13;)f=String.fromCharCode(r.getUint8(o+11)).trim(),c.push({name:Ye(new Uint8Array(e,o,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:r.getUint8(o+16)}),o+=32;if(o+=1,c.length>0)for(;u.length<s&&e.byteLength-o>a;){const h=[];r.getUint8(o)===32?(o+=1,c.forEach(m=>{if(m.type==="C")h.push(Ye(new Uint8Array(e,o,m.length)).trim());else if(m.type==="N")h.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim(),10));else if(m.type==="F")h.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim()));else if(m.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,o,m.length)).trim();h.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}o+=m.length}),u.push(h)):o+=a}}return{header:l,fields:c,records:u,recordSet:ji({fields:c,records:u})}}}const ne=new Map;ne.set("int16","esriFieldTypeSmallInteger"),ne.set("int32","esriFieldTypeInteger"),ne.set("int64","esriFieldTypeInteger"),ne.set("float32","esriFieldTypeSingle"),ne.set("float64","esriFieldTypeDouble"),ne.set("text","esriFieldTypeString");const st=8;let de=class extends le{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(i){await this.init();const{data:e}=await this.request(this.url+"/conf.json",{signal:i?.signal});if(!this._validateHeader(e))throw new C("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:t}=this._parseHeader(e);if(t.dataType==="thematic"){const s=await this._fetchAuxiliaryInformation();t.attributeTable=s}this._set("storageInfo",r),this._set("rasterInfo",t),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(i,e,r,t={}){const{transposeInfo:s}=this.rasterInfo.storageInfo,{transposedVariableName:n}=t,a=!(!s||!n),l=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-i;if(l<0)return null;const o=this._buildCacheFilePath(l,e,r,t.multidimensionalDefinition,n),c=this._getIndexRecordFromBundle(e,r,a),u=await this.request(o,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:t.signal});if(!u)return null;const f=new Uint8Array(u.data),h=this._getTileEndAndContentType(f,c);if(h.recordSize===0)return null;const m=await this.request(o,{range:{from:h.position,to:h.position+h.recordSize},responseType:"array-buffer",signal:t.signal});if(!m)return null;const[p,g]=this._getTileSize(a);return this.decodePixelBlock(m.data,{width:p,height:g,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(i){const e=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return i&&i.type==="RasterInfo"&&!e.some(r=>!i[r])}_parseHeader(i){const e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][i.pixelType],{bandCount:r,histograms:t,colormap:s,blockWidth:n,blockHeight:a,firstPyramidLevel:l,maximumPyramidLevel:o}=i,c=i.statistics&&i.statistics.map(D=>({min:D.min,max:D.max,avg:D.mean,stddev:D.standardDeviation,median:D.median,mode:D.mode})),u=i.extent.spatialReference,f=i.geodataXform?.spatialReference,h=new W(u?.wkid||u?.wkt?u:f);let m=new A({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:h});const p=new E({x:i.pixelSizeX,y:i.pixelSizeY,spatialReference:h}),g=Math.round((m.xmax-m.xmin)/p.x),d=Math.round((m.ymax-m.ymin)/p.y),y=this._parseTransform(i.geodataXform),x=y?m:null;y&&(m=y.forwardTransform(m),p.x=(m.xmax-m.xmin)/g,p.y=(m.ymax-m.ymin)/d);const w=i.properties??{},v=i.format.toLowerCase().replace("cache/",""),T=new E(i.origin.x,i.origin.y,h);let S,b,k,M;if(s&&s.colors)for(S=[],b=0;b<s.colors.length;b++)k=s.colors[b],M=s.values?s.values[b]:b,S.push([M,255&k,k<<16>>>24,k<<8>>>24,k>>>24]);const _=i.LODInfos,F=[];for(b=0;b<_.levels.length;b++)F.push(new ot({level:_.levels[b],resolution:_.resolutions[b],scale:96/.0254*_.resolutions[b]}));const $=new Z({dpi:96,lods:F,format:v,origin:T,size:[n,a],spatialReference:h}),P={recordSize:st,packetSize:i.packetSize,headerSize:i.packetSize*i.packetSize*st+64},z=[{maxCol:Math.ceil(g/n)-1,maxRow:Math.ceil(d/a)-1,minCol:0,minRow:0}];let O=2;if(o>0)for(b=0;b<o;b++)z.push({maxCol:Math.ceil(g/O/n)-1,maxRow:Math.ceil(d/O/a)-1,minCol:0,minRow:0}),O*=2;const B=i.mdInfo;let N=null;if(B&&w._yxs){const D=w._yxs;N={packetSize:D.PacketSize,tileSize:[D.TileXSize,D.TileYSize]}}return{storageInfo:P,rasterInfo:new ge({width:g,height:d,pixelType:e,bandCount:r,extent:m,nativeExtent:x,transform:y,spatialReference:h,pixelSize:p,keyProperties:w,statistics:c,histograms:t,multidimensionalInfo:B,colormap:S,storageInfo:new ye({blockWidth:n,blockHeight:a,pyramidBlockWidth:n,pyramidBlockHeight:a,origin:T,tileInfo:$,transposeInfo:N,firstPyramidLevel:l,maximumPyramidLevel:o,blockBoundary:z})})}}_parseTransform(i){if(!_i(i))throw new C("cloudraster:open","the data contains unsupported geodata transform types");const e=ki(i);if(e.type==="identity")return null;if(e.type!=="polynomial"||!e.forwardCoefficients?.length||!e.inverseCoefficients?.length)throw new C("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}async _fetchAuxiliaryInformation(i){const e=this.request(this.url+"/conf.vat.json",{signal:i}).then(n=>n.data).catch(()=>null),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:i}).then(n=>n.data).catch(()=>null),t=await Promise.all([e,r]);let s;if(t[0]){let n=t[0].fields;const a=t[0].values;if(n&&a){n=n.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":ne.get(o.type),name:o.name,alias:o.alias||o.name}));const l=a.map(o=>({attributes:o}));n&&a&&(s={fields:n,features:l})}}return!s&&t[1]&&(s=dt.parse(t[1]).recordSet),Ee.fromJSON(s)}_buildCacheFilePath(i,e,r,t,s){const n=this._getPackageSize(!!s),a=Math.floor(e/n)*n,l=Math.floor(r/n)*n,o="R"+this._toHexString4(a)+"C"+this._toHexString4(l);let c="L";c+=i>=10?i.toString():"0"+i.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=t?.[0];if(u==null||!f)return`${this.url}/_alllayers/${c}/${o}.bundle`;let h="_yxs";if(!s){h=u.variables.find(g=>g.name===f.variableName).dimensions[0].values.indexOf(f.values[0]).toString(16);const p=4-h.length;for(let g=0;g<p;g++)h="0"+h;h="S"+h}const m=this._getVariableFolderName(s||f.variableName);return`${this.url}/_alllayers/${m}/${h}/${c}/${o}.bundle`}_getPackageSize(i=!1){const{transposeInfo:e}=this.rasterInfo.storageInfo;return i&&e!=null?e.packetSize??0:this.storageInfo.packetSize}_getTileSize(i=!1){const{storageInfo:e}=this.rasterInfo,{transposeInfo:r}=e;return i&&r!=null?r.tileSize:e.tileInfo.size}_getVariableFolderName(i){return(i=i.trim())===""?"_v":i.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(i,e,r=!1){const t=this._getPackageSize(r),s=t*(i%t)+e%t;if(s<0)throw new Error("Invalid level / row / col");return 20+s*this.storageInfo.recordSize+44}_getTileEndAndContentType(i,e){const r=i.subarray(e,e+8);let t,s=0;for(t=0;t<5;t++)s|=(255&r[t])<<8*t;const n=0xffffffffff&s;for(s=0,t=5;t<8;t++)s|=(255&r[t])<<8*(t-5);return{position:n,recordSize:0xffffffffff&s}}_toHexString4(i){let e=i.toString(16);if(e.length!==4){let r=4-e.length;for(;r-- >0;)e="0"+e}return e}};I([R({readOnly:!0})],de.prototype,"storageInfo",void 0),I([R({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=I([X("esri.layers.support.rasterDatasets.CloudRaster")],de);const Ui=de;let me=class extends le{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(i){await this.init();const e=this.data,{pixelBlock:r,statistics:t,histograms:s,name:n,keyProperties:a,nativeExtent:l,transform:o}=this.data,{width:c,height:u,pixelType:f}=r,h=e.extent??new A({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new W({wkid:3857})}),m=e.isPseudoSpatialReference??!e.extent,p={x:h.width/c,y:h.height/u},g=new ge({width:c,height:u,pixelType:f,extent:h,nativeExtent:l,transform:o,pixelSize:p,spatialReference:h.spatialReference,bandCount:r.pixels.length,keyProperties:a||{},statistics:t,isPseudoSpatialReference:m,histograms:s});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(r,{width:512,height:512},i),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(i,e,r,t={}){const s=this._pixelBlockTiles.get(`${i}/${e}/${r}`);return Promise.resolve(s)}async _buildInMemoryRaster(i,e,r){const t=this.rasterInfo.storageInfo.maximumPyramidLevel,s=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:i,tileSize:e,maximumPyramidLevel:t},r):Promise.resolve(ci(i,e,t)),n=this.rasterInfo.statistics!=null,a=this.rasterInfo.histograms!=null,l=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:i},r):Promise.resolve(ui(i)),o=await ct([s,l]);if(!o[0].value&&o[1].value)throw new C("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=o[0].value,n||(this.rasterInfo.statistics=o[1].value?.statistics),a||(this.rasterInfo.histograms=o[1].value?.histograms)}};I([R({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),I([R()],me.prototype,"data",void 0),me=I([X("esri.layers.support.rasterDatasets.InMemoryRaster")],me);const Vi=me;function he(i,e){if(!i||!e)return[];let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const n=he(i,r);for(let a=0;a<n.length;a++)he(n[a],e).forEach(l=>t.push(l));return t}const s=i.getElementsByTagNameNS("*",r);if(!s||s.length===0)return[];for(let n=0;n<s.length;n++)t.push(s[n]||s.item(n));return t}function j(i,e){if(!i||!e)return null;let r=e;e.includes("/")?(r=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=he(i,r);return t.length>0?e?j(t[0],e):t[0]:null}function Y(i,e=null){const r=e?j(i,e):i;let t;return r?(t=r.textContent||r.nodeValue,t?t.trim():null):null}function Yi(i,e){const r=he(i,e),t=[];let s;for(let n=0;n<r.length;n++)s=r[n].textContent||r[n].nodeValue,s&&(s=s.trim(),s!==""&&t.push(s));return t}function Ie(i,e){return Yi(i,e).map(r=>Number(r))}function oe(i,e){const r=Y(i,e);return Number(r)}function Fe(i,e){const r=i?.nodeName?.toLowerCase(),t=e.toLowerCase();return r.slice(r.lastIndexOf(":")+1)===t}function rt(i,e){if(!i||!e)return null;const r=[];for(let t=0;t<i.length;t++)r.push(i[t]),r.push(e[t]);return r}function Xi(i){const e=j(i,"GeodataXform"),r=Te(oe(e,"SpatialReference/WKID")||Y(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};const t=oe(e,"PolynomialOrder")??1,s=Ie(e,"CoeffX/Double"),n=Ie(e,"CoeffY/Double"),a=Ie(e,"InverseCoeffX/Double"),l=Ie(e,"InverseCoeffY/Double"),o=rt(s,n),c=rt(a,l);return{spatialReference:r,transform:o&&c&&o.length&&c.length?new Ae({spatialReference:r,polynomialOrder:t,forwardCoefficients:o,inverseCoefficients:c}):null}}function Ki(i){const e=oe(i,"NoDataValue"),r=j(i,"Histograms/HistItem"),t=oe(r,"HistMin"),s=oe(r,"HistMax"),n=oe(r,"BucketCount"),a=Y(r,"HistCounts")?.split("|").map(h=>Number(h));let l,o,c,u;he(i,"Metadata/MDI").forEach(h=>{const m=Number(h.textContent??h.nodeValue);switch(h.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=m;break;case"STATISTICS_MAXIMUM":o=m;break;case"STATISTICS_MEAN":c=m;break;case"STATISTICS_STDDEV":u=m}});const f=oe(i,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a?.length&&t!=null&&s!=null?{min:t,max:s,size:n||a.length,counts:a}:null,sourceBandIndex:f,statistics:l!=null&&o!=null?{min:l,max:o,avg:c,stddev:u}:null}}function Te(i){if(!i)return null;let e=Number(i);if(!isNaN(e)&&e!==0)return new W({wkid:e});if((i=String(i)).startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const r=i.indexOf("VERTCS"),t=i.indexOf("PROJCS"),s=t>-1?t:i.indexOf("GEOGCS");if(s===-1)return null;const n=i.slice(s,i.lastIndexOf("]",r)+1).trim(),a=i.slice(r,i.lastIndexOf("]")).trim();e=Me(n);const l=new W(e?{wkid:e}:{wkt:n}),o=Me(a);return o&&(l.vcsWkid=o),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=Me(i),new W(e!==0?{wkid:e}:{wkt:i})):null}function Me(i){const e=i.replaceAll("]","[").replaceAll('"',"").split("[").map(s=>s.trim()).filter(s=>s!==""),r=e[e.length-1].split(","),t=r[0]?.toLowerCase();if((t==="epsg"||t==="esri")&&i.endsWith('"]]')){const s=Number(r[1]);if(!isNaN(s)&&s!==0)return s}return 0}function He(i){if(i?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};i.documentElement.childNodes.forEach(t=>{if(t.nodeType===1){if(Fe(t,"SRS")){if(!e.spatialReference){const s=Y(t);e.spatialReference=Te(s)}}else if(Fe(t,"Metadata"))if(t.getAttribute("domain")==="xml:ESRI"){const{spatialReference:s,transform:n}=Xi(t);e.transform=n,e.spatialReference||(e.spatialReference=s)}else he(t,"MDI").forEach(s=>e.metadata[s.getAttribute("key")]=Y(s));else if(Fe(t,"PAMRasterBand")){const s=Ki(t);s.sourceBandIndex!=null&&e.rasterBands[s.sourceBandIndex]==null?e.rasterBands[s.sourceBandIndex]=s:e.rasterBands.push(s)}}});const r=e.rasterBands;if(r.length){const t=!!r[0].statistics;e.statistics=t?r.map(n=>n.statistics).filter(Pe):null;const s=!!r[0].histogram;e.histograms=s?r.map(n=>n.histogram).filter(Pe):null}return e}let Re=class extends le{async open(i){await this.init();const e=await this._fetchData(i);let{spatialReference:r,statistics:t,histograms:s,transform:n}=await this._fetchAuxiliaryData(i);const a=!r;a&&(r=new W({wkid:3857})),s?.length&&t==null&&(t=Je(s));const{width:l,height:o}=e;let c=new A({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:r});const u=n?n.forwardTransform(c):c;let f=!0;if(n){const m=n.forwardCoefficients;f=m&&m[1]===0&&m[2]===0,f&&(n=null,c=u)}const h=new Vi({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:e,statistics:t,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await h.open(),h.data=null,this._set("rasterInfo",h.rasterInfo),this._inMemoryRaster=h}fetchRawTile(i,e,r,t={}){return this._inMemoryRaster.fetchRawTile(i,e,r,t)}async _fetchData(i){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:i?.signal}),r=hi(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new C("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);const t=r.toLowerCase(),s=t==="gif"||t==="bmp"||!St("ios"),n=await this.decodePixelBlock(e,{format:t,useCanvas:s,hasNoZlibMask:!0});if(n==null)throw new C("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(i){const e=i?.signal,r=this.ioConfig.skipExtensions??[],t=r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),s=this.datasetFormat,n=s==="JPG"?"jgw":s==="PNG"?"pgw":s==="BMP"?"bpw":null,a=n&&r.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),l=await ct([t,a]);if(e?.aborted)throw Rt();const o=He(l[0].value?.data);if(!o.transform){const c=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(u=>Number(u)):null;o.transform=c?.length===6?new Ae({forwardCoefficients:[c[4],c[5],c[0],-c[1],c[2],-c[3]]}):null}return o}};I([R({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=I([X("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const be=Re;let pe=class extends le{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(i){await this.init();const e=i&&i.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const t=r.data;if(this.sourceJSON=t,!t)throw new C("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!t.tileInfo)throw new C("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=t.cacheType,this.tileType==null&&(s.includes(t.tileInfo.format.toLowerCase())?this.tileType="Map":t.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=t.name?.slice(t.name.indexOf("/")+1)??"";const n=await this._fetchRasterInfo({signal:e});if(n==null)throw new C("image-server-raster:open","cannot initialize image service");const a=this.tileType==="Map"?Qi(t.tileInfo,t):Z.fromJSON(t.tileInfo);vt(a);const[l,o]=this._computeMinMaxLOD(n,a),{extent:c,pixelSize:u}=n,f=.5/n.width*u.x,h=Math.max(u.x,u.y),{lods:m}=a;(this.tileType!=="Map"&&t.maxScale!==0||Math.abs(u.x-u.y)>f||!m.some(b=>Math.abs(b.resolution-h)<f))&&(u.x=u.y=l.resolution,n.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),n.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const p=l.level-o.level,[g,d]=a.size,y=[],x=[];m.forEach((b,k)=>{b.level>=o.level&&b.level<=l.level&&y.push({x:b.resolution,y:b.resolution}),k<m.length-1&&x.push(Math.round(10*b.resolution/m[k+1].resolution)/10)}),y.sort((b,k)=>b.x-k.x);const w=this.computeBlockBoundary(c,g,d,a.origin,y,p),v=y.length>1?y.slice(1):null;let T;t.transposeInfo&&(T={tileSize:[t.transposeInfo.rows,t.transposeInfo.cols],packetSize:n.keyProperties?._yxs.PacketSize??0});const S=x.length<=1||x.length>=3&&x.slice(0,x.length-1).every(b=>b===x[0])?x[0]??2:Math.round(10/(o.resolution/l.resolution)**(-1/p))/10;if(n.storageInfo=new ye({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:v,pyramidScalingFactor:S,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:a,transposeInfo:T,blockBoundary:w}),this._fixGCSShift(n),this._set("rasterInfo",n),t.capabilities.toLowerCase().includes("tilemap")){const b={tileInfo:n.storageInfo.tileInfo,parsedUrl:Tt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Oi({layer:b})}}async fetchRawTile(i,e,r,t={}){const{storageInfo:s,extent:n}=this.rasterInfo,{transposeInfo:a}=s,l=a!=null&&!!t.transposedVariableName;if(this._slices&&!l&&t.sliceId==null)return null;const o=l?0:s.maximumPyramidLevel-i+this._levelOffset,c=`${this.url}/tile/${o}/${e}/${r}`,u=this._slices?l?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:f}=await this.request(c,{query:u,responseType:"array-buffer",signal:t.signal});if(!f)return null;const h=l?a.tileSize:s.tileInfo.size,m=await this.decodePixelBlock(f,{width:h[0],height:h[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(m==null)return null;const p=s.blockBoundary[i];if(s.compression!=="jpg"||r>p.minCol&&r<p.maxCol&&e>p.minRow&&e<p.maxRow)return m;const{origin:g,blockWidth:d,blockHeight:y}=s,{x,y:w}=this.getPyramidPixelSize(i),v=Math.round((n.xmin-g.x)/x)%d,T=Math.round((n.xmax-g.x)/x)%d||d,S=Math.round((g.y-n.ymax)/w)%y,b=Math.round((g.y-n.ymin)/w)%y||y,k=r===p.minCol?v:0,M=e===p.minRow?S:0,_=r===p.maxCol?T:d,F=e===p.maxRow?b:y;return fi(m,{x:k,y:M},{width:_-k,height:F-M}),m}getSliceIndex(i){if(!this._slices||i==null||i.length===0)return null;const e=i;for(let r=0;r<this._slices.length;r++){const t=this._slices[r].multidimensionalDefinition;if(t.length===e.length&&!t.some(s=>{const n=e.find(a=>s.variableName===a.variableName&&a.dimensionName===s.dimensionName);return n?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return r}return null}async fetchVariableStatisticsHistograms(i,e){const r=this.request(this.url+"/statistics",{query:{variable:i,f:"json"},signal:e}).then(n=>n.data?.statistics),t=this.request(this.url+"/histograms",{query:{variable:i,f:"json"},signal:e}).then(n=>n.data?.histograms),s=await Promise.all([r,t]);return s[0]&&s[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(i,e={}){if(!this._tilemapCache)return 0;let r=this.identifyPixelLocation(i,0,e.datumTransformation);if(r===null)return null;let t=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let n=s-t+this._levelOffset;const a=r.srcLocation;for(;n>=0;){try{if(await this._tilemapCache.fetchAvailability(n,r.row,r.col,e)==="available")break}catch{}if(n--,t++,r=this.identifyPixelLocation(a,t,e.datumTransformation),r===null)return null}return n===-1||r==null?null:t}async _fetchRasterInfo(i){const e=this.sourceJSON;if(this.tileType==="Map"){const a=e.fullExtent||e.extent,l=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),o=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),c=W.fromJSON(e.spatialReference||a.spatialReference),u=new E({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new ge({width:l,height:o,bandCount:3,extent:A.fromJSON(a),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:r}=i,t=Qt(this.url,this.sourceJSON,{signal:r,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:r}).then(a=>a.data&&a.data.slices).catch(()=>null):null,n=await Promise.all([t,s]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){const{sourceJSON:i}=this;i.minScale&&i.minScale<0&&(i.minScale=0),i.maxScale&&i.maxScale<0&&(i.maxScale=0)}_fixGCSShift(i){const{extent:e,spatialReference:r}=i;e.xmin>-1&&e.xmax>181&&r?.wkid&&r.isGeographic&&(i.nativeExtent=i.extent,i.transform=new Fi,i.extent=i.transform.forwardTransform(e))}_computeMinMaxLOD(i,e){const{pixelSize:r}=i,t=.5/i.width*r.x,{lods:s}=e,n=e.lodAt(Math.max.apply(null,s.map(h=>h.level))),a=e.lodAt(Math.min.apply(null,s.map(h=>h.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=s[0].level,[n,a];if(l==="Raster")return[s.find(h=>h.resolution===r.x)??n,a];const{minScale:o,maxScale:c}=this.sourceJSON;let u=n;c>0&&(u=s.find(h=>Math.abs(h.scale-c)<t),u||(u=s.filter(h=>h.scale>c).sort((h,m)=>h.scale>m.scale?1:-1)[0]??n));let f=a;return o>0&&(f=s.find(h=>Math.abs(h.scale-o)<t)??a,this._levelOffset=f.level-a.level),[u,f]}};function Qi(i,e){if(!i)return null;const{minScale:r,maxScale:t,minLOD:s,maxLOD:n}=e;if(s!=null&&n!=null)return Z.fromJSON({...i,lods:i.lods.filter(({level:a})=>a!=null&&a>=s&&a<=n)});if(r!==0&&t!==0){const a=c=>Math.round(1e4*c)/1e4,l=r?a(r):1/0,o=t?a(t):-1/0;return Z.fromJSON({...i,lods:i.lods.filter(c=>{const u=a(c.scale);return u<=l&&u>=o})})}return Z.fromJSON(i)}I([R({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),I([R()],pe.prototype,"tileType",void 0),pe=I([X("esri.layers.support.rasterDatasets.ImageServerRaster")],pe);const Zi=pe,V=new Map;V.set("Int8","s8"),V.set("UInt8","u8"),V.set("Int16","s16"),V.set("UInt16","u16"),V.set("Int32","s32"),V.set("UInt32","u32"),V.set("Float32","f32"),V.set("Float64","f32"),V.set("Double64","f32");const te=new Map;te.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),te.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),te.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),te.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ce=class extends le{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(i){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=i?i.signal:null,r=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:s}=this._parseHeader(r.data);if(this.ioConfig.skipExtensions?.indexOf("aux.xml")===-1){const g=await this._fetchAuxiliaryData(i);g!=null&&(t.statistics=g.statistics??t.statistics,t.histograms=g.histograms,g.histograms&&t.statistics==null&&(t.statistics=Je(g.histograms)))}this._set("rasterInfo",t),this._files=s;const n=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:l}=this.rasterInfo.storageInfo,o=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:u}=this.rasterInfo,f=[],h=this._getBandSegmentCount();let m=0,p=-1;for(;m<this._storageIndex.length;){p++;const g=Math.ceil(c/a/o**p)-1,d=Math.ceil(u/l/o**p)-1;m+=(g+1)*(d+1)*h*4,f.push({maxRow:d,maxCol:g,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(i,e,r,t={}){const{blockWidth:s,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,l=a[i];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:o,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:f,actualTileHeight:h}=this._getTileLocation(i,e,r);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const _=new Uint8Array(s*n);return new ee({width:s,height:n,pixels:null,mask:_,validPixelCount:0})}const{bandIds:m}=this.ioConfig,p=this._getBandSegmentCount(),g=[];let d=0;for(d=0;d<p;d++)m&&!m.includes(d)||g.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:t.signal}));const y=await Promise.all(g),x=y.map(_=>_.data.byteLength).reduce((_,F)=>_+F),w=new Uint8Array(x);let v=0;for(d=0;d<p;d++)w.set(new Uint8Array(y[d].data),v),v+=y[d].data.byteLength;const T=te.get(this.rasterInfo.storageInfo.compression).decoderFormat,S=await this.decodePixelBlock(w.buffer,{width:s,height:n,format:T,planes:m?.length||o,pixelType:c});if(S==null)return null;let{noDataValue:b}=this.rasterInfo;if(b!=null&&T!=="lerc"&&!S.mask&&(b=b[0],b!=null)){const _=S.width*S.height,F=new Uint8Array(_);if(Math.abs(b)>1e24)for(d=0;d<_;d++)Math.abs((S.pixels[0][d]-b)/b)>1e-6&&(F[d]=1);else for(d=0;d<_;d++)S.pixels[0][d]!==b&&(F[d]=1);S.mask=F}let k=0,M=0;if(f!==s||h!==n){let _=S.mask;if(_)for(d=0;d<n;d++)if(M=d*s,d<h)for(k=f;k<s;k++)_[M+k]=0;else for(k=0;k<s;k++)_[M+k]=0;else for(_=new Uint8Array(s*n),S.mask=_,d=0;d<h;d++)for(M=d*s,k=0;k<f;k++)_[M+k]=1}return S}_parseIndex(i){if(i.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,t,s,n,a;if(di){for(r=new Uint8Array(i),s=new ArrayBuffer(i.byteLength),t=new Uint8Array(s),n=0;n<i.byteLength/4;n++)for(a=0;a<4;a++)t[4*n+a]=r[4*n+3-a];e=new Uint32Array(s)}else e=new Uint32Array(i);return e}_getBandSegmentCount(){return te.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(i,e,r){const{blockWidth:t,blockHeight:s,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:l}=this.rasterInfo,o=this._getBandSegmentCount();let c,u,f,h=0,m=0;for(f=0;f<i;f++)m=n**f,c=Math.ceil(a/t/m),u=Math.ceil(l/s/m),h+=c*u;m=n**i,c=Math.ceil(a/t/m),u=Math.ceil(l/s/m),h+=e*c+r,h*=4*o;const p=this._storageIndex.subarray(h,h+4*o);let g=0,d=0;const y=[];for(let x=0;x<o;x++)g=p[4*x]*2**32+p[4*x+1],d=g+p[4*x+2]*2**32+p[4*x+3],y.push({from:g,to:d});return{ranges:y,actualTileWidth:r<c-1?t:Math.ceil(a/m)-t*(c-1),actualTileHeight:e<u-1?s:Math.ceil(l/m)-s*(u-1)}}_parseHeader(i){const e=j(i,"MRF_META/Raster");if(!e)throw new C("mrf:open","not a valid MRF format");const r=j(e,"Size"),t=parseInt(r.getAttribute("x"),10),s=parseInt(r.getAttribute("y"),10),n=parseInt(r.getAttribute("c"),10),a=(Y(e,"Compression")||"none").toLowerCase();if(!te.has(a))throw new C("mrf:open","currently does not support compression "+a);const l=Y(e,"DataType")||"UInt8",o=V.get(l);if(o==null)throw new C("mrf:open","currently does not support pixel type "+l);const c=j(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),h=j(e,"DataValues");let m,p;if(h&&(p=h.getAttribute("NoData"),p!=null&&(m=p.trim().split(" ").map(F=>parseFloat(F)))),j(i,"MRF_META/CachedSource"))throw new C("mrf:open","currently does not support MRF referencing other data files");const g=j(i,"MRF_META/GeoTags"),d=j(g,"BoundingBox");let y,x=!1;if(d!=null){const F=parseFloat(d.getAttribute("minx")),$=parseFloat(d.getAttribute("miny")),P=parseFloat(d.getAttribute("maxx")),z=parseFloat(d.getAttribute("maxy")),O=Y(g,"Projection")||"";let B=W.WGS84;if(O!=="LOCAL_CS[]")if(O.toLowerCase().startsWith("epsg:")){const N=Number(O.slice(5));isNaN(N)||N===0||(B=new W({wkid:N}))}else B=Te(O)??W.WGS84;else x=!0,B=new W({wkid:3857});y=new A(F,$,P,z),y.spatialReference=B}else x=!0,y=new A({xmin:-.5,ymin:.5-s,xmax:t-.5,ymax:.5,spatialReference:new W({wkid:3857})});const w=j(i,"MRF_META/Rsets"),v=parseInt(w&&w.getAttribute("scale")||"2",10),T=y.spatialReference,S=new ye({origin:new E({x:y.xmin,y:y.ymax,spatialReference:T}),blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:a,pyramidScalingFactor:v}),b=new E({x:y.width/t,y:y.height/s,spatialReference:T}),k=new ge({width:t,height:s,extent:y,isPseudoSpatialReference:x,spatialReference:T,bandCount:n,pixelType:o,pixelSize:b,noDataValue:m,storageInfo:S}),M=Y(i,"datafile"),_=Y(i,"IndexFile");return{rasterInfo:k,files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:M||this.url.replace(".mrf",te.get(a).blobExtension)}}}async _fetchAuxiliaryData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i?.signal});return He(e)}catch{return null}}};I([R()],ce.prototype,"_files",void 0),I([R()],ce.prototype,"_storageIndex",void 0),I([R({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),ce=I([X("esri.layers.support.rasterIO.MRFRaster")],ce);const es=ce,Ce=(i,e)=>i.get(e)?.values,fe=(i,e)=>i.get(e)?.values?.[0];let ae=class extends le{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(i){await this.init();const e=i?i.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new C("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:s,isBigTiff:n}=mi(r),a=[];await this._readIFDs(a,r,t,s,0,n?8:4,e);const{imageInfo:l,rasterInfo:o}=this._parseIFDs(a),c=pi(a),u=yi(a);if(this._headerInfo={littleEndian:t,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:u,...l},this._set("rasterInfo",o),!l.isSupported)throw new C("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new C("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const f=a[0].get("PREDICTOR")?.values?.[0];if(a[0].get("SAMPLEFORMAT")?.values?.[0]===3&&f===2)throw new C("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:m=[]}=this.ioConfig;if(!m.includes("aux.xml")){const p=await this._fetchAuxiliaryMetaData(i);p!=null&&this._processPAMInfo(p,o)}m.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||(o.attributeTable=await this._fetchAuxiliaryTable(i),o.attributeTable!=null&&(o.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(i,e,r,t={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(i,e,r))return null;const s=await this._fetchRawTiffTile(i,e,r,!1,t);if(s!=null&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(i,e,r,!0,t);n!=null&&n.pixels[0]instanceof Uint8Array&&(s.mask=n.pixels[0])}return s}_parseIFDs(i){const e=gi(i),{width:r,height:t,tileWidth:s,tileHeight:n,planes:a,pixelType:l,compression:o,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:f,pyramidBlockHeight:h,tileBoundary:m,affine:p,metadata:g}=e,d=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid;let y=Te(d),x=!!e.isPseudoGeographic;y==null&&(x=!0,y=new W({wkid:3857}));const w=new A({...e.extent,spatialReference:y}),v=new E(w?{x:w.xmin,y:w.ymax,spatialReference:y}:{x:0,y:0}),T=new ye({blockWidth:s,blockHeight:n,pyramidBlockWidth:f,pyramidBlockHeight:h,compression:o,origin:v,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:m}),S=new E({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:y}),b=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let k=null;const M=fe(i[0],"PHOTOMETRICINTERPRETATION"),_=Ce(i[0],"COLORMAP");if(M<=3&&_?.length>3&&_.length%3==0){k=[];const $=_.length/3;for(let P=0;P<$;P++)k.push([P,_[P]>>>8,_[P+$]>>>8,_[P+2*$]>>>8])}const F=new ge({width:r,height:t,bandCount:a,pixelType:l,pixelSize:S,storageInfo:T,spatialReference:y,isPseudoSpatialReference:x,keyProperties:b,extent:w,colormap:k,statistics:g?g.statistics:null});return p?.length&&(F.nativeExtent=new A({xmin:-.5,ymin:.5-t,xmax:r-.5,ymax:.5,spatialReference:y}),F.transform=new Ae({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),F.extent=F.transform.forwardTransform(F.nativeExtent),F.pixelSize=new E({x:(w.xmax-w.xmin)/r,y:(w.ymax-w.ymin)/t,spatialReference:y}),T.origin.x=-.5,T.origin.y=.5),{imageInfo:e,rasterInfo:F}}_processPAMInfo(i,e){if(e.statistics=i.statistics??e.statistics,e.histograms=i.histograms,i.histograms&&e.statistics==null&&(e.statistics=Je(i.histograms)),i.transform&&e.transform==null){e.transform=i.transform,e.nativeExtent=e.extent;const r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new E({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&i.spatialReference&&(e.spatialReference=i.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}async _readIFDs(i,e,r,t,s,n=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+s,to:t+s+this._bufferSize},responseType:"array-buffer",signal:a})).data,s=t+s,t=0);const l=await this._readIFD(e,r,t,s,xe.TIFF_TAGS,n,a);if(i.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(i,e,r,l.nextIFD-s,s,n,a)}async _readIFD(i,e,r,t,s=xe.TIFF_TAGS,n=4,a){if(!i)return null;const l=xi(i,e,r,t,s,n);if(l.success){const o=[];if(l.ifd?.forEach(c=>{c.values||o.push(c)}),o.length>0){const c=o.map(f=>f.offlineOffsetSize).filter(Pe),u=Math.min.apply(null,c.map(f=>f[0]));if(Math.min.apply(null,c.map(f=>f[0]+f[1]))-u<=this._bufferSize){const{data:f}=await this.request(this.url,{range:{from:u,to:u+this._bufferSize},responseType:"array-buffer",signal:a});i=f,t=u,o.forEach(h=>wi(i,e,h,t))}}if(l.ifd?.has("GEOKEYDIRECTORY")){const c=l.ifd.get("GEOKEYDIRECTORY"),u=c?.values;if(u&&u.length>4){const f=u[0]+"."+u[1]+"."+u[2],h=await this._readIFD(i,e,c.valueOffset+6-t,t,xe.GEO_KEYS,2,a);c.data=h.ifd,c.data&&c.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==i.byteLength)return(i=(await this.request(this.url,{range:{from:t,to:t+l.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<l.requiredBufferSize?null:this._readIFD(i,e,0,t,xe.TIFF_TAGS,4,a)}async _fetchRawTiffTile(i,e,r,t,s={}){const n=this._getTileLocation(i,e,r,t);if(!n)return null;const{ranges:a,actualTileWidth:l,actualTileHeight:o,ifd:c}=n,u=a.map(S=>this.request(this.url,{range:S,responseType:"array-buffer",signal:s.signal})),f=await Promise.all(u),h=f.map(S=>S.data.byteLength).reduce((S,b)=>S+b),m=f.length===1?f[0].data:new ArrayBuffer(h),p=[0],g=[0];if(f.length>1){const S=new Uint8Array(m);for(let b=0,k=0;b<f.length;b++){const M=f[b].data;S.set(new Uint8Array(M),k),p[b]=k,k+=M.byteLength,g[b]=M.byteLength}}const{blockWidth:d,blockHeight:y}=this.getBlockWidthHeight(i),x=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:g},width:d,height:y,planes:null,pixelType:null});if(x==null)return null;let w,v,T;if(l!==d||o!==y){let S=x.mask;if(S)for(w=0;w<y;w++)if(T=w*d,w<o)for(v=l;v<d;v++)S[T+v]=0;else for(v=0;v<d;v++)S[T+v]=0;else for(S=new Uint8Array(d*y),x.mask=S,w=0;w<o;w++)for(T=w*d,v=0;v<l;v++)S[T+v]=1}return x}_getTileLocation(i,e,r,t=!1){const{firstPyramidLevel:s,blockBoundary:n}=this.rasterInfo.storageInfo,a=i===0?0:i-(s-1),{_headerInfo:l}=this;if(!l)return null;const o=t?l.maskIFDs[a]:a===0?l?.ifds[0]:l?.pyramidIFDs[a-1];if(!o)return null;const c=Ii(o,l),u=Ce(o,"TILEOFFSETS");if(u===void 0)return null;const f=Ce(o,"TILEBYTECOUNTS"),{minRow:h,minCol:m,maxRow:p,maxCol:g}=n[a];if(e>p||r>g||e<h||r<m)return null;const d=fe(o,"IMAGEWIDTH"),y=fe(o,"IMAGELENGTH"),x=fe(o,"TILEWIDTH"),w=fe(o,"TILELENGTH"),v=[];if(c){const{bandCount:T}=this.rasterInfo;for(let S=0;S<T;S++){const b=S*(p+1)*(g+1)+e*(g+1)+r;v[S]={from:u[b],to:u[b]+f[b]-1}}}else{const T=e*(g+1)+r;v.push({from:u[T],to:u[T]+f[T]-1})}for(let T=0;T<v.length;T++)if(v[T].from==null||!v[T].to)return null;return{ranges:v,ifd:o,actualTileWidth:r===g&&d%x||x,actualTileHeight:e===p&&y%w||w}}async _fetchAuxiliaryMetaData(i){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:i?.signal});return He(e)}catch{return null}}async _fetchAuxiliaryTable(i){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:i?.signal}),r=dt.parse(e);return r?.recordSet?Ee.fromJSON(r.recordSet):null}catch{return null}}};I([R()],ae.prototype,"_files",void 0),I([R()],ae.prototype,"_headerInfo",void 0),I([R()],ae.prototype,"_bufferSize",void 0),I([R({type:String,json:{write:!0}})],ae.prototype,"datasetFormat",void 0),ae=I([X("esri.layers.support.rasterDatasets.TIFFRaster")],ae);const ts=ae,L=new Map;L.set("CRF",{desc:"Cloud Raster Format",constructor:Ui}),L.set("MRF",{desc:"Meta Raster Format",constructor:es}),L.set("TIFF",{desc:"GeoTIFF",constructor:ts}),L.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Zi}),L.set("JPG",{desc:"JPG Raster Format",constructor:be}),L.set("PNG",{desc:"PNG Raster Format",constructor:be}),L.set("GIF",{desc:"GIF Raster Format",constructor:be}),L.set("BMP",{desc:"BMP Raster Format",constructor:be});class is{static get supportedFormats(){const e=new Set;return L.forEach((r,t)=>e.add(t)),e}static async open(e){const{url:r,ioConfig:t,sourceJSON:s}=e;let n=e.datasetFormat;n==null&&r.lastIndexOf(".")&&(n=r.slice(r.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:r,sourceJSON:s,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};let l,o;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!t?.enableCRF)throw new C("rasterfactory:open",`cannot open raster: ${r}`);return l=L.get(n).constructor,o=new l(a),await o.open({signal:e.signal}),o}if(n)throw new C("rasterfactory:open","not a supported format "+n);const c=Array.from(L.keys());let u=0;const f=()=>(n=c[u++],n&&(n!=="CRF"||t?.enableCRF)?(l=L.get(n).constructor,o=new l(a),o.open({signal:e.signal}).then(()=>o).catch(()=>f())):null);return f()}static register(e,r,t){L.has(e.toUpperCase())||L.set(e.toUpperCase(),{desc:r,constructor:t})}}let J=class extends Nt(Pi(_t(Ci(Jt(Gi($i(zt(kt(Ft(Dt)))))))))){constructor(...i){super(...i),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}load(i){const e=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(Mt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const i=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ue({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:e}=this,r=e?.attributeTable,t=r!=null?r.fields:null,s="Raster.";if(t){const l=t.filter(o=>o.type!=="oid"&&o.name.toLowerCase()!=="value").map(o=>{const c=o.clone();return c.name=s+o.name,c});i.push(...l)}const n=e?.dataType,a=e?.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&a!=null){const l=a.variables[0].unit?.trim(),o="Magnitude"+(l?` (${l})`:"");i.push(new ue({name:"Raster.Magnitude",alias:o,domain:null,editable:!1,type:"double"})),i.push(new ue({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return i}createPopupTemplate(i){const{rasterFields:e}=this,r=new Set(e.map(({name:t})=>t).filter(t=>t.toLowerCase()!=="raster.servicepixelvalue.raw"));return Bi({fields:e,title:this.title},{...i,visibleFieldNames:r})}async generateRasterInfo(i,e){if(!(i=Ne($e,i)))return this.rasterInfo;try{const r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>r[n.url]=n);const t=Be(i.functionDefinition?.toJSON()??i.toJSON(),r),s=new De({rasterFunction:t});return await s.open(e),s.rasterInfo}catch(r){throw r instanceof C?r:new C("imagery-tile-layer","the given raster function is not supported")}}write(i,e){const r=this._primaryRasters[0]??this.raster;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(i,e);if(e&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new C("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(i){let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,s=[this.url];t&&Mi(t.toJSON(),s);const n=await Promise.all(s.map(l=>is.open({url:l,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:i}))),a=n.findIndex(l=>l==null);if(a>-1)throw new C("imagery-tile-layer:open",`cannot open raster: ${s[a]}`);if(this._primaryRasters=n,t){const l={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(u=>l[u.url]=u);const o=Be(t.functionDefinition?.toJSON()??t.toJSON(),l),c=new De({rasterFunction:o});try{await c.open(),this.raster=c}catch(u){const f=ze.getLogger(this);u instanceof C&&f.error("imagery-tile-layer:open",u.message),f.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}const r=this.raster.rasterInfo;if(!r)throw new C("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}else this.read({tileInfo:this.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Ct(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}};I([R()],J.prototype,"_primaryRasters",void 0),I([R({type:[Pt],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],J.prototype,"bandIds",void 0),I([R({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),$t(Zt)],J.prototype,"interpolation",void 0),I([R(Ot)],J.prototype,"legendEnabled",void 0),I([R({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],J.prototype,"isReference",void 0),I([R({type:["show","hide"]})],J.prototype,"listMode",void 0),I([R({json:{read:!0,write:!0}})],J.prototype,"blendMode",void 0),I([R()],J.prototype,"sourceJSON",void 0),I([R({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],J.prototype,"version",void 0),I([R({readOnly:!0,json:{read:!1}})],J.prototype,"type",void 0),I([R({type:["ArcGISTiledImageServiceLayer"]})],J.prototype,"operationalLayerType",void 0),I([R({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(i,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(i,e,r){e[r]=!i}}}})],J.prototype,"popupEnabled",void 0),I([R({type:Bt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],J.prototype,"popupTemplate",void 0),I([R({readOnly:!0})],J.prototype,"defaultPopupTemplate",null),I([R({readOnly:!0,type:[ue]})],J.prototype,"fields",void 0),I([R({readOnly:!0,type:[ue]})],J.prototype,"rasterFields",null),J=I([X("esri.layers.ImageryTileLayer")],J);const ks=J;export{ks as default};
