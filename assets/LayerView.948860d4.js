import{c_ as a,i as l,dK as d,ad as o,m as p,au as u,e as i,y as s,a as y}from"./index.da161cf1.js";let e=class extends a(l(d(o.EventedMixin(p)))){constructor(t){super(t),this.layer=null,this.parent=null}initialize(){this.when().catch(t=>{if(t.name!=="layerview:create-error"){const r=this.layer&&this.layer.id||"no id",n=this.layer&&this.layer.title||"no title";u.getLogger(this).error("#resolve()",`Failed to resolve layer view (layer title: '${n}', id: '${r}')`,t)}})}get fullOpacity(){return(this.layer?.opacity??1)*(this.parent?.fullOpacity??1)}get suspended(){return!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){return!this.suspended&&this.layer?.legendEnabled===!0}get updating(){return!(!this.updatingHandles?.updating&&!this.isUpdating())}get updatingProgress(){return this.updating?0:1}get visible(){return this.layer?.visible===!0}set visible(t){this._overrideIfSome("visible",t)}canResume(){return this.visible&&this.layer?.loaded&&!this.parent?.suspended&&this.view?.ready||!1}getSuspendInfo(){const t=this.parent&&this.parent.suspended?this.parent.suspendInfo:{},r=this;return r.view&&r.view.ready||(t.viewNotReady=!0),this.layer&&this.layer.loaded||(t.layerNotLoaded=!0),this.visible||(t.layerInvisible=!0),t}isUpdating(){return!1}};i([s()],e.prototype,"fullOpacity",null),i([s()],e.prototype,"layer",void 0),i([s()],e.prototype,"parent",void 0),i([s({readOnly:!0})],e.prototype,"suspended",null),i([s({readOnly:!0})],e.prototype,"suspendInfo",null),i([s({readOnly:!0})],e.prototype,"legendEnabled",null),i([s({type:Boolean,readOnly:!0})],e.prototype,"updating",null),i([s({readOnly:!0})],e.prototype,"updatingProgress",null),i([s()],e.prototype,"visible",null),i([s()],e.prototype,"view",void 0),e=i([y("esri.views.layers.LayerView")],e);const g=e;export{g as d};
