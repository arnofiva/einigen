import{a3 as d,e as r,y as t,a as s}from"./index.da161cf1.js";import y from"./FeatureLayer.6ea98f03.js";import"./UniqueValueRenderer.0143139a.js";import"./ColorStop.f762bde8.js";import"./diffUtils.f0876598.js";import"./colorRamps.80cb140e.js";import"./jsonUtils.4745b876.js";import"./DictionaryLoader.90c8c47c.js";import"./FieldsIndex.09813895.js";import"./heatmapUtils.32e9a30b.js";import"./sql.414b1952.js";import"./FeatureLayerBase.07ef7e55.js";import"./featureLayerUtils.0566dc37.js";import"./AttachmentQuery.c430db32.js";import"./Query.e586665e.js";import"./RelationshipQuery.60e2b826.js";import"./serviceCapabilitiesUtils.c358c66d.js";import"./editsZScale.58b9a03e.js";import"./queryZScale.2643e684.js";import"./FeatureSet.97dc0f24.js";import"./APIKeyMixin.605900a3.js";import"./ArcGISService.116191b2.js";import"./BlendLayer.eacc4944.js";import"./jsonUtils.1c231e28.js";import"./CustomParametersMixin.244652a9.js";import"./EditBusLayer.3831f0f2.js";import"./FeatureEffectLayer.a9b039ed.js";import"./FeatureEffect.ee83c7e0.js";import"./FeatureFilter.97dd33dd.js";import"./FeatureReductionLayer.9f7296a1.js";import"./LabelClass.1c6b8047.js";import"./defaults.83793da7.js";import"./defaultsJSON.a416f32c.js";import"./OrderedLayer.bbc75e49.js";import"./PortalLayer.9c2e677f.js";import"./portalItemUtils.ea6f2bf4.js";import"./ScaleRangeLayer.1a5bb9a6.js";import"./TemporalLayer.5874b62b.js";import"./FeatureTemplate.c7eaa370.js";import"./FeatureType.4659b5f1.js";import"./fieldProperties.174d0f24.js";import"./labelingInfo.990e68e3.js";import"./versionUtils.05c8a355.js";import"./styleUtils.a985c9a8.js";import"./TopFeaturesQuery.165d1927.js";import"./popupUtils.f5ffced0.js";function o(i){return(a,m,p)=>a?a[0].orientedImageryProperties?.[i]??null:null}let e=class extends y{constructor(){super(...arguments),this.geometryType="point",this.operationalLayerType="OrientedImageryLayer",this.type="oriented-imagery"}get effectiveElevationSource(){const{elevationSource:i,demPathPrefix:a,demPathSuffix:m}=this;if(!i?.url?.trim())return i;let p=i.url.trim();return a?.trim()&&(p=`${a.trim()}/${p}`),m?.trim()&&(p+=`/${m.trim()}`),{...i,url:p}}_verifySource(){if(super._verifySource(),this.geometryType!=="point")throw new d("oriented-imagery-layer:invalid-geometry-type","OrientedImageryLayer only supports point geometry type")}};r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeading")}}})],e.prototype,"cameraHeading",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraHeight")}}})],e.prototype,"cameraHeight",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraPitch")}}})],e.prototype,"cameraPitch",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("cameraRoll")}}})],e.prototype,"cameraRoll",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("coveragePercent")}}})],e.prototype,"coveragePercent",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathPrefix")}}})],e.prototype,"demPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("demPathSuffix")}}})],e.prototype,"demPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathPrefix")}}})],e.prototype,"depthImagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("depthImagePathSuffix")}}})],e.prototype,"depthImagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("farDistance")}}})],e.prototype,"farDistance",void 0),r([t({json:{write:!0}})],e.prototype,"geometryType",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("horizontalFieldOfView")}}})],e.prototype,"horizontalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("horizontalMeasurementUnit")}}})],e.prototype,"horizontalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathPrefix")}}})],e.prototype,"imagePathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("imagePathSuffix")}}})],e.prototype,"imagePathSuffix",void 0),r([t({json:{type:Number,write:!0,read:{source:"layers",reader:o("imageRotation")}}})],e.prototype,"imageRotation",void 0),r([t({type:Number,json:{write:!0,read:{source:"layers",reader:o("maximumDistance")}}})],e.prototype,"maximumDistance",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("nearDistance")}}})],e.prototype,"nearDistance",void 0),r([t({type:["OrientedImageryLayer"]})],e.prototype,"operationalLayerType",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("orientedImageryType")}}})],e.prototype,"orientedImageryType",void 0),r([t({json:{read:!1},value:"oriented-imagery",readOnly:!0})],e.prototype,"type",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalFieldOfView")}}})],e.prototype,"verticalFieldOfView",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("verticalMeasurementUnit")}}})],e.prototype,"verticalMeasurementUnit",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathPrefix")}}})],e.prototype,"videoPathPrefix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("videoPathSuffix")}}})],e.prototype,"videoPathSuffix",void 0),r([t({json:{write:!0,read:{source:"layers",reader:o("elevationSource")}}})],e.prototype,"elevationSource",void 0),r([t()],e.prototype,"effectiveElevationSource",null),e=r([s("esri.layers.OrientedImageryLayer")],e);const ie=e;export{ie as default};
