import{e as i,y as o,a as v,H as R,ol as W,V as _,j as I,ba as Z,bD as O,ik as z,L as c,t as H,aO as B,U as X,bO as Y,bZ as P,X as ee,dP as te,dQ as re,R as ie,dU as j,ie as E,au as y,dR as se,g4 as oe,a3 as p,b as ae,dT as ne,cd as le,E as $,f2 as L,eJ as pe,p as de,aZ as ye,ej as ue,d_ as ce,e0 as he,bv as fe,e2 as me,e3 as ge,e4 as ve,v as be}from"./index.da161cf1.js";import"./UniqueValueRenderer.0143139a.js";import{n as we}from"./jsonUtils.4745b876.js";import{i as Ie}from"./APIKeyMixin.605900a3.js";import{l as Le}from"./ArcGISService.116191b2.js";import{c as Se}from"./EditBusLayer.3831f0f2.js";import{j as Fe}from"./PortalLayer.9c2e677f.js";import{t as _e}from"./ScaleRangeLayer.1a5bb9a6.js";import{N as Oe,K as A}from"./SceneService.40f5c1fa.js";import{t as je}from"./capabilities.e8ada26d.js";import{t as Ee,p as $e}from"./FeatureReductionLayer.9f7296a1.js";import{i as Ae}from"./FetchAssociatedFeatureLayer.f41666d0.js";import{s as xe}from"./fieldProperties.174d0f24.js";import{r as Te}from"./FieldsIndex.09813895.js";import{s as N,l as De,u as Re,m as Pe}from"./I3SLayerDefinitions.0628cd13.js";import{C as Ne}from"./LabelClass.1c6b8047.js";import{i as x}from"./labelingInfo.990e68e3.js";import{p as Ue}from"./serviceCapabilitiesUtils.c358c66d.js";import{g as Ge}from"./persistable.2f8a3a21.js";import{t as qe}from"./styleUtils.a985c9a8.js";import{b as Ce}from"./Query.e586665e.js";import{p as Qe}from"./popupUtils.f5ffced0.js";import{l as Ve}from"./I3SUtil.1e24f8d3.js";import{n as ke,p as Je}from"./popupUtils.5174221c.js";import"./ColorStop.f762bde8.js";import"./diffUtils.f0876598.js";import"./colorRamps.80cb140e.js";import"./DictionaryLoader.90c8c47c.js";import"./heatmapUtils.32e9a30b.js";import"./portalItemUtils.ea6f2bf4.js";import"./I3SIndexInfo.9cdb77bc.js";import"./featureLayerUtils.0566dc37.js";import"./sql.414b1952.js";import"./AttachmentQuery.c430db32.js";import"./RelationshipQuery.60e2b826.js";import"./FeatureLayer.6ea98f03.js";import"./FeatureLayerBase.07ef7e55.js";import"./editsZScale.58b9a03e.js";import"./queryZScale.2643e684.js";import"./FeatureSet.97dc0f24.js";import"./BlendLayer.eacc4944.js";import"./jsonUtils.1c231e28.js";import"./CustomParametersMixin.244652a9.js";import"./FeatureEffectLayer.a9b039ed.js";import"./FeatureEffect.ee83c7e0.js";import"./FeatureFilter.97dd33dd.js";import"./OrderedLayer.bbc75e49.js";import"./TemporalLayer.5874b62b.js";import"./FeatureTemplate.c7eaa370.js";import"./FeatureType.4659b5f1.js";import"./versionUtils.05c8a355.js";import"./TopFeaturesQuery.165d1927.js";import"./defaults.83793da7.js";import"./defaultsJSON.a416f32c.js";import"./resourceExtension.748c0ef1.js";import"./I3SBinaryReader.f09861ac.js";let d=class extends R{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([o({type:String,json:{read:!0,write:!0}})],d.prototype,"name",void 0),i([o({type:String,json:{read:!0,write:!0}})],d.prototype,"field",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],d.prototype,"currentRangeExtent",void 0),i([o({type:[Number],json:{read:!0,write:!0}})],d.prototype,"fullRangeExtent",void 0),i([o({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],d.prototype,"type",void 0),d=i([v("esri.layers.support.RangeInfo")],d);var m;let S=m=class extends W(_.ofType(I)){constructor(e){super(e)}clone(){return new m(this.items.map(e=>e.clone()))}write(e,r){return this.toJSON(r)}toJSON(e){const r=e?.layer?.spatialReference;return r?this.toArray().map(t=>{if(!r.equals(t.spatialReference)){if(!Z(t.spatialReference,r))return e&&e.messages&&e.messages.push(new O("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const n=new I;z(t,n,r),t=n}const a=t.toJSON(e);return delete a.spatialReference,a}).filter(t=>t!=null):(e?.messages&&e.messages.push(new O("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(t=>t.toJSON(e)))}static fromJSON(e,r){const t=new m;return e.forEach(a=>t.add(I.fromJSON(a,r))),t}};S=m=i([v("esri.layers.support.PolygonCollection")],S);const g=S;var F;let h=F=class extends R{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new g,this._geometriesSource=null,this._handles=new H}initialize(){this._handles.add(B(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,X))}destroy(){this._handles.destroy()}readGeometries(e,r,t){Array.isArray(e)?this.geometries=g.fromJSON(e,t):this._geometriesSource={url:Y(e,t),context:t}}async loadGeometries(e,r){if(this._geometriesSource==null)return;const{url:t,context:a}=this._geometriesSource,n=await P(t,{responseType:"json",signal:r?.signal}),l=e.toJSON(),u=n.data.map(b=>({...b,spatialReference:l}));this.geometries=g.fromJSON(u,a),this._geometriesSource=null}clone(){const e=new F({geometries:ee(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};i([o({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],h.prototype,"spatialRelationship",void 0),i([o({type:g,nonNullable:!0,json:{write:!0}}),Ge({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],h.prototype,"geometries",void 0),i([c(["web-scene","portal-item"],"geometries")],h.prototype,"readGeometries",null),h=F=i([v("esri.layers.support.SceneFilter")],h);const Ke=h,Me=["3DObject","Point"],T=xe();let s=class extends Se(Oe(Le(te(Fe(_e(re(Ie(ie(be))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new _,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){const t=this.getFeatureType(r?.feature)?.domains?.[e];return t&&t.type!=="inherited"?t:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new Te(this.fields)}readNodePages(e,r,t){return r.layerType==="Point"&&(e=r.pointNodePages),e==null||typeof e!="object"?null:N.fromJSON(e,t)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return We[this.profile]||"mesh"}set renderer(e){j(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){const e=this.associatedLayer?.capabilities??je,{query:r,editing:{supportsGlobalId:t,supportsRollbackOnFailure:a,supportsUploadWithItemId:n,supportsGeometryUpdate:l,supportsReturnServiceEditsInSourceSpatialReference:u},data:{supportsZ:b,supportsM:U,isVersioned:G,supportsAttachment:q},operations:{supportsEditing:C,supportsAdd:Q,supportsUpdate:V,supportsDelete:k,supportsQuery:J,supportsQueryAttachments:K,supportsAsyncConvert3D:M}}=e,f=e.operations.supportsChangeTracking,w=!!this.associatedLayer?.infoFor3D&&E();return{query:r,editing:{supportsGlobalId:t,supportsReturnServiceEditsInSourceSpatialReference:u,supportsRollbackOnFailure:a,supportsGeometryUpdate:w&&l,supportsUploadWithItemId:n},data:{supportsAttachment:q,supportsZ:b,supportsM:U,isVersioned:G},operations:{supportsQuery:J,supportsQueryAttachments:K,supportsEditing:C&&f,supportsAdd:w&&Q&&f,supportsDelete:w&&k&&f,supportsUpdate:V&&f,supportsAsyncConvert3D:M}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,r){return!e&&r.fields&&r.fields.some(t=>(t.type==="esriFieldTypeOID"&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,r){return!e&&r.fields&&r.fields.some(t=>(t.type==="esriFieldTypeGlobalID"&&(e=t.name),!!e)),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,r){const t=r.store.profile;return t!=null&&D[t]?D[t]:(y.getLogger(this).error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")}load(e){const r=e!=null?e.signal:null,t=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(se).then(()=>this._fetchService(r)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,r),this._setAssociatedFeatureLayer(r),this._loadFilterGeometries()])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>qe(this,{origin:"service"},r)).then(()=>j(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(e));return this.addResolvingPromise(t),Promise.resolve(this)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){y.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new Ce;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryExtent(e||this.createQuery(),r))}queryFeatureCount(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatureCount(e||this.createQuery(),r))}queryFeatures(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatures(e||this.createQuery(),r)).then(t=>{if(t?.features)for(const a of t.features)a.layer=this,a.sourceLayer=this;return t})}async queryCachedAttributes(e,r){const t=oe(this.fieldsIndex,await ke(this,Je(this)));return Ve(this.parsedUrl.path,this.attributeStorageInfo??[],e,r,t)}async queryCachedFeature(e,r){const t=await this.queryCachedAttributes(e,[r]);if(!t||t.length===0)throw new p("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const a=new ae;return a.attributes=t[0],a.layer=this,a.sourceLayer=this,a}queryObjectIds(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryObjectIds(e||this.createQuery(),r))}queryAttachments(e,r){return this._getAssociatedLayerForQuery().then(t=>t.queryAttachments(e,r))}getFieldUsageInfo(e){const r={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||r:(y.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),r)}createPopupTemplate(e){return Qe(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(r=>r.name===e)}async queryCachedStatistics(e,r){if(await this.load(r),!this.statisticsInfo)throw new p("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const t=this.fieldsIndex.get(e);if(!t)throw new p("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const a of this.statisticsInfo)if(a.name===t.name){const n=ne(this.parsedUrl.path,a.href);return P(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:r?r.signal:null}).then(l=>l.data)}throw new p("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,r){return this._debouncedSaveOperations(A.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(A.SAVE,e)}async applyEdits(e,r){const{applyEdits:t}=await le(()=>import("./editingSupport.22fdf483.js"),["assets/editingSupport.22fdf483.js","assets/index.da161cf1.js","assets/index.8db76e31.css","assets/normalizeUtils.54c24a4d.js","assets/normalizeUtilsCommon.87227ae2.js","assets/EditBusLayer.3831f0f2.js"]);if(await this.load(),!this.associatedLayer)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),t(this,this.associatedLayer.source,e,r)}async uploadAssets(e,r){if(await this.load(),this.associatedLayer==null)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,r)}on(e,r){return super.on(e,r)}validateLayer(e){if(e.layerType&&!Me.includes(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function r(t,a){let n=!1,l=!1;if(t==null)n=!0,l=!0;else{const u=a&&a.isGeographic;switch(t){case"east-north-up":case"earth-centered":n=!0,l=u;break;case"vertex-reference-frame":n=!0,l=!u;break;default:n=!1}}if(!n)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}r(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const r=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(n=>n.name===e.name)),t=!!this.associatedLayer?.fields?.some(n=>n&&e.name===n.name),a={supportsLabelingInfo:r,supportsRenderer:r,supportsPopupTemplate:r||t,supportsLayerQuery:t};this._fieldUsageInfo[e.name]=a}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const r of this.associatedLayer.fields){const t=this.getField(r.name);t?(!t.domain&&r.domain&&(t.domain=r.domain.clone()),t.editable=r.editable,t.nullable=r.nullable,t.length=r.length):(e||(e=this.fields?this.fields.slice():[]),e.push(r.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],r=$(this);for(let t=0;t<e.length;t++){const a=e[t],n=this.originIdOf(a),l=this.associatedLayer.originIdOf(a);n<l&&(l===L.SERVICE||l===L.PORTAL_ITEM)&&r.setAtOrigin(a,this.associatedLayer[a],l)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.editingInfo?.lastEditDate,r=this.associatedLayer?.serverGens,t=this.associatedLayer?.getAtOrigin("fullExtent","service");!E()||this.associatedLayer?.infoFor3D==null||!t||!pe(this.associatedLayer?.url)||!e||this.serviceUpdateTimeStamp?.lastUpdate===e.getTime()||!this.serviceUpdateTimeStamp&&r?.minServerGen===r?.serverGen||$(this).setAtOrigin("fullExtent",t.clone(),L.SERVICE)}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const r=new Ae(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await r.fetch()}catch(t){de(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await ye(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?y.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):y.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;e&&(this.profile==="mesh-pyramids"&&e.mode==="relative-to-scene"&&y.getLogger(this).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&y.getLogger(this).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};i([o({types:{key:"type",base:Ee,typeMap:{selection:$e}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],s.prototype,"featureReduction",void 0),i([o({type:[d],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],s.prototype,"rangeInfos",void 0),i([o({json:{read:!1}})],s.prototype,"associatedLayer",void 0),i([o({type:["show","hide"]})],s.prototype,"listMode",void 0),i([o({type:["ArcGISSceneServiceLayer"]})],s.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),i([o({...T.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"fields",void 0),i([o()],s.prototype,"types",null),i([o()],s.prototype,"typeIdField",null),i([o()],s.prototype,"templates",null),i([o()],s.prototype,"formTemplate",null),i([o({readOnly:!0})],s.prototype,"fieldsIndex",null),i([o({type:Ue,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],s.prototype,"floorInfo",void 0),i([o(T.outFields)],s.prototype,"outFields",void 0),i([o({type:N,readOnly:!0,json:{read:!1}})],s.prototype,"nodePages",void 0),i([c("service","nodePages",["nodePages","pointNodePages"])],s.prototype,"readNodePages",null),i([o({type:[De],readOnly:!0})],s.prototype,"materialDefinitions",void 0),i([o({type:[Re],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),i([o({type:[Pe],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),i([o({readOnly:!0})],s.prototype,"attributeStorageInfo",void 0),i([o({readOnly:!0})],s.prototype,"statisticsInfo",void 0),i([o({type:_.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],s.prototype,"excludeObjectIds",void 0),i([o({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),i([o({type:Ke,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],s.prototype,"filter",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),i([o(ue)],s.prototype,"elevationInfo",null),i([o({type:String})],s.prototype,"geometryType",null),i([o(ce)],s.prototype,"labelsVisible",void 0),i([o({type:[Ne],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:x},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:x},write:!0}})],s.prototype,"labelingInfo",void 0),i([o(he)],s.prototype,"legendEnabled",void 0),i([o({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,r){if(typeof e=="number"&&e>=0&&e<=1)return e;const t=r.layerDefinition?.drawingInfo?.transparency;return t!==void 0?fe(t):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],s.prototype,"opacity",void 0),i([o({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"priority",void 0),i([o({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"semantic",void 0),i([o({types:we,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],s.prototype,"renderer",null),i([o({json:{read:!1}})],s.prototype,"cachedDrawingInfo",void 0),i([c("service","cachedDrawingInfo")],s.prototype,"readCachedDrawingInfo",null),i([o({readOnly:!0,json:{read:!1}})],s.prototype,"capabilities",null),i([o({type:Boolean,json:{read:!1}})],s.prototype,"editingEnabled",null),i([o({readOnly:!0,json:{write:!1,read:!1}})],s.prototype,"infoFor3D",null),i([o(me)],s.prototype,"popupEnabled",void 0),i([o({type:ge,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),i([o({readOnly:!0,json:{read:!1}})],s.prototype,"defaultPopupTemplate",null),i([o({type:String,json:{read:!1}})],s.prototype,"objectIdField",void 0),i([c("service","objectIdField",["objectIdField","fields"])],s.prototype,"readObjectIdField",null),i([o({type:String,json:{read:!1}})],s.prototype,"globalIdField",void 0),i([c("service","globalIdField",["globalIdField","fields"])],s.prototype,"readGlobalIdField",null),i([o({readOnly:!0,type:String,json:{read:!1}})],s.prototype,"displayField",null),i([o({type:String,json:{read:!1}})],s.prototype,"profile",void 0),i([c("service","profile",["store.profile"])],s.prototype,"readProfile",null),i([o({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],s.prototype,"normalReferenceFrame",void 0),i([o(ve)],s.prototype,"screenSizePerspectiveEnabled",void 0),s=i([v("esri.layers.SceneLayer")],s);const D={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},We={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},Ht=s;export{Ht as default};
