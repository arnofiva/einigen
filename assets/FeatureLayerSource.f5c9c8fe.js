import{l0 as k,kp as M,gb as $,W as T,e as w,y as A,a as j,dJ as C,dj as U,ao as I,bZ as m,a6 as O,eu as D,Y as P,a2 as Q,eJ as L,dT as x,cd as G,a3 as S,dk as V,dS as W,dR as Y,cA as Z,cB as z,kr as v,tU as H,au as _,tV as X,I as B,b as K,a0 as ee,tW as te}from"./index.da161cf1.js";import{m as ae}from"./MeshGeoreferencedRelativeVertexSpace.a44e5587.js";import{A as se}from"./External.3b5c14d5.js";import{isFeatureIdentifierArrayWithGlobalId as re,isFeatureIdentifierArrayWithObjectId as ie}from"./editingSupport.22fdf483.js";import{o as ne}from"./clientSideDefaults.f7f5ffde.js";import{x as oe}from"./QueryTask.3d449f5b.js";import{s as ue}from"./executeQueryJSON.640d70ab.js";import{i as le}from"./editsZScale.58b9a03e.js";import{b as de}from"./Query.e586665e.js";import"./normalizeUtils.54c24a4d.js";import"./normalizeUtilsCommon.87227ae2.js";import"./EditBusLayer.3831f0f2.js";import"./QueryEngineCapabilities.a6a6a20b.js";import"./defaultsJSON.a416f32c.js";import"./executeForIds.28afd71c.js";import"./query.22cd43bf.js";import"./pbfQueryUtils.c4418ce7.js";import"./pbf.82c57b62.js";import"./queryZScale.2643e684.js";import"./executeQueryPBF.d6edfec1.js";import"./FeatureSet.97dc0f24.js";function ce(e){const{vertexSpace:t}=e;if(t.isRelative)return e.clone();const{anchor:a}=e,s=a.clone(),r=k(pe,[-s.x,-s.y,-s.z]),o=new ae({origin:[s.x,s.y,s.z]}),n=e.cloneWithVertexSpace(o),{position:u}=n.vertexAttributes;return n.vertexAttributes.position=M(new Float64Array(u.length),u,r),n.vertexAttributesChanged(),n}const pe=$(),he=new T({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),ye=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),me=new T({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let b=class extends C{constructor(){super(...arguments),this.type="feature-layer",this.refresh=U(async()=>{await this.load();const e=this.sourceJSON.editingInfo?.lastEditDate;if(e==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const t=e!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:t,updates:t?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(e){const t=e!=null?e.signal:null,a=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(a,t)),Promise.resolve(this)}get queryTask(){const{capabilities:e,parsedUrl:t,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:o,fieldsIndex:n}=this.layer,u=I("featurelayer-pbf")&&e?.query.supportsFormatPBF&&s==null,i=e?.operations?.supportsQueryAttachments??!1;return new oe({url:t.path,pbfSupported:u,fieldsIndex:n,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:o,queryAttachmentsSupported:i})}async addAttachment(e,t){await this.load();const a=e.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+a+"/addAttachment",r=this._getLayerRequestOptions(),o=this._getFormDataForAttachment(t,r.query);try{const n=await m(s,{body:o});return this._createFeatureEditResult(n.data.addAttachmentResult)}catch(n){throw this._createAttachmentErrorResult(a,n)}}async updateAttachment(e,t,a){await this.load();const s=e.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+s+"/updateAttachment",o=this._getLayerRequestOptions({query:{attachmentId:t}}),n=this._getFormDataForAttachment(a,o.query);try{const u=await m(r,{body:n});return this._createFeatureEditResult(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(s,u)}}async applyEdits(e,t){await this.load();const{layer:a}=this,s=a.infoFor3D,r=s!=null,o=r||(t?.globalIdUsed??!1),n=r?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,u=e.addFeatures?.map(g=>this._getFeatureJSON(g,s))??[],i=(await Promise.all(u)).filter(O),l=e.updateFeatures?.map(g=>this._getFeatureJSON(g,s))??[],d=(await Promise.all(l)).filter(O),c=this._getFeatureIds(e.deleteFeatures,o);le(i,d,a.spatialReference);const p=await this._getAttachmentEditsJSON(e),R=a.capabilities.editing.supportsAsyncApplyEdits&&r,h={gdbVersion:t?.gdbVersion||a.gdbVersion,rollbackOnFailure:t?.rollbackOnFailureEnabled,useGlobalIds:o,returnEditMoment:t?.returnEditMoment,usePreviousEditMoment:t?.usePreviousEditMoment,sessionId:t?.sessionId,async:R};t?.returnServiceEditsOption?(h.edits=JSON.stringify([{id:a.layerId,adds:i,updates:d,deletes:c,attachments:p,assetMaps:n}]),h.returnServiceEditsOption=he.toJSON(t?.returnServiceEditsOption),h.returnServiceEditsInSourceSR=t?.returnServiceEditsInSourceSR):(h.adds=i.length?JSON.stringify(i):null,h.updates=d.length?JSON.stringify(d):null,h.deletes=c.length?o?JSON.stringify(c):c.join(","):null,h.attachments=p&&JSON.stringify(p),h.assetMaps=n!=null?JSON.stringify(n):void 0);const y=this._getLayerRequestOptions({method:"post",query:h}),F=t?.returnServiceEditsOption?a.url:a.parsedUrl.path,E=R?await this._asyncApplyEdits(F+"/applyEdits",y):await m(F+"/applyEdits",y);return!a.capabilities.operations?.supportsEditing&&a.effectiveCapabilities?.operations?.supportsEditing&&await D?.findCredential(a.url)?.refreshToken(),this._createEditsResult(E)}async deleteAttachments(e,t){await this.load();const a=e.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+a+"/deleteAttachments";try{return(await m(s,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(r){throw this._createAttachmentErrorResult(a,r)}}fetchRecomputedExtents(e={}){const t=e.signal;return this.load({signal:t}).then(async()=>{const a=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:o}=await m(`${r}/${s}`,a),{id:n,extent:u,fullExtent:i,timeExtent:l}=o,d=u||i;return{id:n,fullExtent:d&&P.fromJSON(d),timeExtent:l&&Q.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(e,t={}){await this.load();const a=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,a)}async queryFeatures(e,t){return await this.load(),this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeaturesJSON(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})}async queryObjectIds(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeatureCount(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryExtent(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeatures(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeaturesCount(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopFeatures(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopObjectIds(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopExtents(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopCount(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})}async fetchPublishingStatus(){if(!L(this.layer.url))return"unavailable";const e=x(this.layer.url,"status"),t=await m(e,{query:{f:"json"}});return me.fromJSON(t.data.status)}async uploadAssets(e,t){const{uploadAssets:a}=await G(()=>import("./uploadAssets.c9cdcf60.js"),["assets/uploadAssets.c9cdcf60.js","assets/index.da161cf1.js","assets/index.8db76e31.css","assets/External.3b5c14d5.js"]);return a(e,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},t)}async _asyncApplyEdits(e,t){const a=(await m(e,t)).data.statusUrl;for(;;){const s=(await m(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return m(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new S("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new S("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await V(ge)}}_createRequestQueryOptions(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e?.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t}async _fetchService(e,t){if(!e){const{data:s}=await m(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:I("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:t}));e=s}this.sourceJSON=await this._patchServiceJSON(e,t);const a=e.type;if(!ye.has(a))throw new S("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(e,t){if(e.type!=="Table"&&e.geometryType&&!e?.drawingInfo?.renderer&&!e.defaultSymbol){const a=ne(e.geometryType).renderer;W("drawingInfo.renderer",a,e)}if(e.geometryType==="esriGeometryMultiPatch"&&e.infoFor3D&&(e.geometryType="mesh"),e.extent==null)try{const{data:a}=await m(this.layer.url,this._getLayerRequestOptions({signal:t}));a.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:a.spatialReference})}catch(a){Y(a)}return e}async _getFeatureJSON(e,t){const{geometry:a}=e,s={...e.attributes};if(t!=null&&a?.type==="mesh"){const{transformFieldRoles:r}=t,{origin:o,spatialReference:n,transform:u}=a,i=this.layer.spatialReference;await Z(n,i);const l=z(o,i);if(s[r.originX]=l.x,s[r.originY]=l.y,s[r.originZ]=l.z??0,u!=null){const{translation:d,scale:c,rotation:p}=u,{vertexSpace:R}=a,h=R.isGeoreferenced?1:v(n)/v(i);s[r.translationX]=d[0]*h,s[r.translationY]=-d[2]*h,s[r.translationZ]=d[1]*h,s[r.scaleX]=c[0],s[r.scaleY]=c[2],s[r.scaleZ]=c[1],s[r.rotationX]=p[0],s[r.rotationY]=p[2],s[r.rotationZ]=p[1],s[r.rotationDeg]=p[3]}return{geometry:null,attributes:s}}return a==null?{attributes:s}:a.type==="mesh"||a.type==="extent"?null:{geometry:a.toJSON(),attributes:s}}async _getAttachmentEditsJSON(e){const t=await Promise.all((e.addAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),a=await Promise.all((e.updateAttachments??[]).map(r=>this._getAttachmentEditJSON(r))),s=e.deleteAttachments??[];return t.length||a.length||s.length?{adds:t,updates:a,deletes:[...s]}:null}async _getAttachmentEditJSON(e){const{feature:t,attachment:a}=e,{globalId:s,name:r,contentType:o,data:n,uploadId:u}=a,i={globalId:s,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(t&&(i.parentGlobalId="attributes"in t?t.attributes&&t.attributes[this.layer.globalIdField]:t.globalId),u)i.uploadId=u;else if(n){const l=await H(n);l&&(i.contentType=l.mediaType,i.data=l.data),n instanceof File&&(i.name=n.name)}return r&&(i.name=r),o&&(i.contentType=o),i}async _uploadMeshesAndGetAssetMapEditsJSON(e){const{addAssetFeatures:t}=e;if(!t?.length)return null;const a=await this._filterRedundantAssetMaps(t);if(!t?.length)return null;const s=new Array,r=new Map;for(const o of a){const{geometry:n}=o,{vertexSpace:u}=n;if(u.isRelative)s.push(n);else{const i=ce(n);r.set(i,n),o.geometry=i,s.push(i)}}await this.uploadAssets(s);for(const[o,n]of r)n.addExternalSources(o.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(e){const t=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of e){const o=r.geometry,{metadata:n}=o,u=n.getExternalSourcesOnService(s),i=r.getAttribute(a);if(u.length===0){_.getLogger(this).error(`Skipping feature ${i}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:l}=u.find(se)??u[0],{vertexSpace:d}=o,c=d.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const p of l)p.parts.length===1?t.push({globalId:X(),parentGlobalId:i,assetName:p.assetName,assetHash:p.parts[0].partHash,flags:c}):_.getLogger(this).error(`Skipping asset ${p.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t}_getFeatureIds(e,t){if(!e||e.length===0)return[];if(t&&re(e))return e.map(r=>r.globalId);if(ie(e))return e.map(r=>r.objectId);const{layer:a}=this,s=t?a.globalIdField:a.objectIdField;return s?e.map(r=>r.getAttribute(s)):[]}_createEditsResult(e){const t=e.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(t))for(const i of t)s.push({id:i.id,editedFeatures:i.editedFeatures}),i.id===a&&(r={addResults:i.addResults??[],updateResults:i.updateResults??[],deleteResults:i.deleteResults??[],attachments:i.attachments,editMoment:i.editMoment});else r=t;const o=r?.assetMaps;if(o){for(const i of o.addResults)i.success||_.getLogger(this).error(`Failed to map asset to feature with globalId ${i.globalId}.`);for(const i of o.updateResults)i.success||_.getLogger(this).error(`Failed to map asset to feature with globalId ${i.globalId}.`)}const n=r?.attachments,u={addFeatureResults:r?.addResults?.map(this._createFeatureEditResult,this)??[],updateFeatureResults:r?.updateResults?.map(this._createFeatureEditResult,this)??[],deleteFeatureResults:r?.deleteResults?.map(this._createFeatureEditResult,this)??[],addAttachmentResults:n&&n.addResults?n.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:n&&n.updateResults?n.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:n&&n.deleteResults?n.deleteResults.map(this._createFeatureEditResult,this):[]};if(r?.editMoment&&(u.editMoment=r.editMoment),s.length>0){u.editedFeatureResults=[];for(const i of s){const{editedFeatures:l}=i,d=l?.spatialReference?new B(l.spatialReference):null;u.editedFeatureResults.push({layerId:i.id,editedFeatures:{adds:l?.adds?.map(c=>this._createEditedFeature(c,d))||[],updates:l?.updates?.map(c=>({original:this._createEditedFeature(c[0],d),current:this._createEditedFeature(c[1],d)}))||[],deletes:l?.deletes?.map(c=>this._createEditedFeature(c,d))||[],spatialReference:d}})}}return u}_createEditedFeature(e,t){return new K({attributes:e.attributes,geometry:ee({...e.geometry,spatialReference:t})})}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new S("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_createAttachmentErrorResult(e,t){const a=t.details.messages&&t.details.messages[0]||t.message,s=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new S("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(e,t){const a=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(a)for(const s in t){const r=t[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(e={}){const{parsedUrl:t,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...e,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...t.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}}async _filterRedundantAssetMaps(e){const{layer:t}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=t;if(s==null||a==null)return e;const o=te(s);if(o==null)return e;const n=x(r.path,`../${o.id}`),u=new Array,i=new Array;for(const y of e)y.geometry.metadata.getExternalSourcesOnService(r).length>0?i.push(y):u.push(y);const l=i.map(y=>y.getAttribute(a)).filter(O);if(l.length===0)return e;const{assetMapFieldRoles:{parentGlobalId:d,assetHash:c}}=s,p=new de;p.where=`${d} IN (${l.map(y=>`'${y}'`)})`,p.outFields=[c,d],p.returnGeometry=!1;const R=await ue(n,p),{features:h}=R;return h.length===0?e:[...u,...i.filter(y=>{const F=y.getAttribute(a);if(!F)return!0;const{metadata:E}=y.geometry,g=h.filter(f=>f.getAttribute(d)===F);if(g.length===0)return!0;const J=g.map(f=>f.getAttribute(c));return E.getExternalSourcesOnService(r).flatMap(({source:f})=>f.flatMap(q=>q.parts.map(N=>N.partHash))).some(f=>J.every(q=>f!==q))})]}};w([A()],b.prototype,"type",void 0),w([A({constructOnly:!0})],b.prototype,"layer",void 0),w([A({readOnly:!0})],b.prototype,"queryTask",null),b=w([j("esri.layers.graphics.sources.FeatureLayerSource")],b);const ge=1e3,Ce=b;export{Ce as default};
