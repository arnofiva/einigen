import{e as V}from"./Segment.b33fc9b3.js";import{a3 as S,dF as X,mC as g,jj as Y,mD as Z,mE as tt,I as et,a_ as at,b0 as nt,b1 as st,mF as it,mG as rt,mH as x,e$ as k}from"./index.da161cf1.js";const gt={readOnly:!0,get(){return V(this.view)}};var G;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(G||(G={}));function C(t){if(!t)return null;if(Y(t)&&t.wkid){const e=Z[t.wkid];if(e)return e}if(t.wkt){const e=ot(t.wkt);if(e)return e}return null}function ot(t){const e=tt.exec(t);if(!e||e.length!==2)return null;const a=e[1].split(",");if(!a||a.length<3)return null;const n=parseFloat(a[1]),s=parseFloat(a[2]);return isNaN(n)||isNaN(s)?null:{a:n,f:s===0?0:1/s}}function ct(t){const e=C(t??et.WGS84);if(ht(e))return e;const a=e.a*(1-e.f);return Object.assign(e,{b:a,eSq:1-(a/e.a)**2,radius:(2*e.a+a)/3,densificationRatio:1e4/((2*e.a+a)/3)})}function ht(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function lt(t){return C(t)!==null}function vt(t,e="meters"){if(!t)throw new S("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(n=>!lt(n.spatialReference)))throw new S("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const a=[];for(let n=0;n<t.length;n++){const s=t[n],{spatialReference:p}=s,v=s.type==="polyline"?s.paths:s.rings;let r=0;for(let _=0;_<v.length;_++){const o=v[_];let f=0;for(let m=1;m<o.length;m++){const z=o[m-1][0],w=o[m][0],A=o[m-1][1],h=o[m][1];if(A!==h||z!==w){const c=new ut;ft(c,[z,A],[w,h],p),f+=c.distance}}r+=f}r=X(r,"meters",e),a.push(r)}return a}class ut{constructor(e=0,a=void 0,n=void 0){this.distance=e,this.azimuth=a,this.reverseAzimuth=n}}function ft(t,e,a,n){const s=e[0]*g,p=e[1]*g,v=a[0]*g,r=a[1]*g,{a:_,b:o,f,radius:m}=ct(n),z=v-s,w=Math.atan((1-f)*Math.tan(p)),A=Math.atan((1-f)*Math.tan(r)),h=Math.sin(w),c=Math.cos(w),R=Math.sin(A),l=Math.cos(A);let q,b,M,i,N,j,P,U,$,E,y=1e3,u=z;do{if(P=Math.sin(u),U=Math.cos(u),M=Math.sqrt(l*P*(l*P)+(c*R-h*l*U)*(c*R-h*l*U)),M===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;N=h*R+c*l*U,j=Math.atan2(M,N),$=c*l*P/M,b=1-$*$,i=N-2*h*R/b,isNaN(i)&&(i=0),E=f/16*b*(4+f*(4-3*b)),q=u,u=z+(1-E)*f*$*(j+E*M*(i+E*N*(2*i*i-1)))}while(Math.abs(u-q)>1e-12&&--y>0);if(y===0){const B=m,J=Math.acos(Math.sin(p)*Math.sin(r)+Math.cos(p)*Math.cos(r)*Math.cos(v-s))*B,D=v-s,K=Math.sin(D)*Math.cos(r),L=Math.cos(p)*Math.sin(r)-Math.sin(p)*Math.cos(r)*Math.cos(D),Q=Math.atan2(K,L);return t.azimuth=Q/g,t.distance=J,t.reverseAzimuth=void 0,t}const d=b*(_*_-o*o)/(o*o),F=d/1024*(256+d*(d*(74-47*d)-128)),O=o*(1+d/16384*(4096+d*(d*(320-175*d)-768)))*(j-F*M*(i+F/4*(N*(2*i*i-1)-F/6*i*(4*M*M-3)*(4*i*i-3)))),T=Math.atan2(l*Math.sin(u),c*R-h*l*Math.cos(u)),W=Math.atan2(c*Math.sin(u),c*R*Math.cos(u)-h*l);return t.azimuth=T/g,t.distance=O,t.reverseAzimuth=W/g,t}function _t(t,e){if(at(e,0,0,0),t.length>0){for(let a=0;a<t.length;++a)nt(e,e,t[a]);st(e,e,1/t.length)}}function Rt(t,e,a,n){n.projectToRenderScreen(t,H),n.projectToRenderScreen(e,I),it(a,Mt,mt),rt(a,a)}const H=x(),mt=H,I=x(),Mt=I;class zt{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=k(this._spatialReference,1),this._metersPerElevationUnit=k(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{lt as M,ut as R,zt as a,ft as b,gt as c,G as e,Rt as f,_t as t,vt as y};
