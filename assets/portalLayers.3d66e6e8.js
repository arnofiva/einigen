import{cw as y,a3 as L,cx as i}from"./index.da161cf1.js";import{a as w}from"./lazyLayerLoader.65116701.js";import{getNumLayersAndTables as l,preprocessFSItemData as N,getSubtypeGroupLayerIds as d,getFirstLayerOrTableId as I}from"./layersLoader.364682ca.js";import{s as o}from"./portalItemUtils.ea6f2bf4.js";import{t as n}from"./fetchService.1153b1df.js";import"./jsonContext.d19fd1ca.js";import"./styleUtils.a985c9a8.js";async function z(e){!e.portalItem||e.portalItem instanceof y||(e={...e,portalItem:new y(e.portalItem)});const a=await S(e.portalItem);return new a.constructor({portalItem:e.portalItem,...a.properties})}async function S(e){return await e.load(),T(await g(e))}async function g(e){switch(e.type){case"Map Service":return v(e);case"Feature Service":return F(e);case"Feature Collection":return G(e);case"Scene Service":return M(e);case"Image Service":return $(e);case"Stream Service":return b();case"Vector Tile Service":return h();case"GeoJson":return C();case"CSV":return V();case"KML":return j();case"WFS":return W();case"WMTS":return D();case"WMS":return x();case"Feed":return K();default:throw new L("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function T(e){const a=e.className,r=w[a];return{constructor:await r(),properties:e.properties}}async function v(e){return await k(e)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function F(e){if(o(e,"Oriented Imagery Layer"))return O(e);const a=await m(e);if(typeof a=="object"){const r={};return a.id!=null&&(r.layerId=a.id),{className:a.className||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}async function M(e){const a=await m(e);if(typeof a=="object"){const r={};let t;if(a.id!=null?(r.layerId=a.id,t=`${e.url}/layers/${a.id}`):t=e.url,e.typeKeywords?.length){for(const c of Object.keys(i))if(e.typeKeywords.includes(c))return{className:i[c]}}const s=await n(t);return{className:i[s?.layerType]||"SceneLayer",properties:r}}return a===!1?(await n(e.url))?.layerType==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}:{className:"GroupLayer"}}async function G(e){await e.load();const a=o(e,"Map Notes"),r=o(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(o(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return l(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function $(e){await e.load();const a=e.typeKeywords?.map(f=>f.toLowerCase())??[];if(a.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(a.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await e.fetchData(),t=r?.layerType;if(t==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(t==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const s=await n(e.url),c=s.cacheType?.toLowerCase(),p=s.capabilities?.toLowerCase().includes("tilesonly");return c==="map"||p?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function b(){return{className:"StreamLayer"}}function h(){return{className:"VectorTileLayer"}}function C(){return{className:"GeoJSONLayer"}}function V(){return{className:"CSVLayer"}}function j(){return{className:"KMLLayer"}}function W(){return{className:"WFSLayer"}}function x(){return{className:"WMSLayer"}}function D(){return{className:"WMTSLayer"}}function K(){return{className:"StreamLayer"}}async function O(e){return await e.load(),{className:"OrientedImageryLayer",properties:await e.fetchData()}}async function k(e){return(await n(e.url)).tileInfo}async function m(e){const a=e.url;if(!a||/\/\d+$/.test(a))return{};await e.load();const r=await e.fetchData();if(e.type==="Feature Service"){const t=u(await N(r,a));if(typeof t=="object"){const s=d(r);t.className=t.id!=null&&s.includes(t.id)?"SubtypeGroupLayer":"FeatureLayer"}return t}return l(r)>0?u(r):u(await n(a))}function u(e){return l(e)===1&&{id:I(e)}}export{z as fromItem,g as selectLayerClassPath};
