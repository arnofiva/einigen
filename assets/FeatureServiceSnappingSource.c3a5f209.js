import{oZ as P,uy as z,uz as R,a_ as N,c4 as x,e as i,y as s,a as w,m as I,bm as M,pd as O,q as f,U as E,k as F,h as v,uA as U,t as A,B as V,j,iw as J,gN as D,d5 as Z,a6 as k,J as q,gO as L,hp as W,lV as G,a1 as B,sy as Q,c_ as K,al as H,uB as X,di as y,aO as Y,kN as T,uC as ee}from"./index.da161cf1.js";import{m as te}from"./elevationInfoUtils.d710f6c5.js";import{i as ie,o as ne}from"./queryEngineUtils.847a1e82.js";import{y as re}from"./TileTreeDebugger.f46f3b0e.js";import"./DimensionAnalysisView3D.6fd62f7c.js";import"./LineVisualElement.0ee7ffd4.js";import"./LengthDimension.4b10a477.js";import"./Segment.b33fc9b3.js";import"./unitFormatUtils.42a6eb3a.js";import"./analysisViewUtils.8aae6db1.js";import"./ImageMaterial.1905961e.js";import"./Factory.312f3b3e.js";import"./RightAngleQuadVisualElement.408eff27.js";import"./VisualElementResources.f6c3d94a.js";import"./PointVisualElement.eb5b4fbb.js";import"./EditGeometryOperations.3139b272.js";import"./dehydratedFeatureComparison.d41240fc.js";import"./VertexSnappingCandidate.9b872bd0.js";function _(e,t){return z(t.extent,$),R($,N(se,e.x,e.y,0))}const $=P(),se=x();let c=class extends I{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((n,a)=>_(t,n)-_(t,a)),e}_scaleEnabled(){return M(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:n}=t,a=[];for(const{row:r,colFrom:l,colTo:o}of e)for(let d=l;d<=o;d++){const m=t.normalizeCol(d),b=new O(null,n,r,m);this.tileInfo.updateTileInfo(b),a.push(b)}return a}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(f(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),E))}};i([s({readOnly:!0})],c.prototype,"tiles",null),i([s({readOnly:!0})],c.prototype,"_scaleEnabled",null),i([s({readOnly:!0})],c.prototype,"tilesCoveringView",null),i([s({readOnly:!0})],c.prototype,"tileInfo",null),i([s({readOnly:!0})],c.prototype,"tileSize",null),i([s({constructOnly:!0})],c.prototype,"view",void 0),i([s({constructOnly:!0})],c.prototype,"layer",void 0),i([s()],c.prototype,"pointOfInterest",void 0),c=i([w("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],c);let h=class extends F{get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(t!=null){const n=e.map(a=>_(t,a));for(let a=1;a<n.length;a++)if(n[a-1]>n[a])return e.sort((r,l)=>_(t,r)-_(t,l)),e.slice()}return e}get tilesCoveringView(){return this._filterTiles(this.view.featureTiles?.tiles?.toArray()).map(ae)}get tileInfo(){return this.view.featureTiles?.tilingScheme.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const e=this.pointOfInterest;return e??this.view.pointsOfInterest?.focus.location}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.handles.add(f(()=>this.view.featureTiles,e=>{this.handles.remove(C),e&&this.handles.add(e.addClient(),C)},v))}_filterTiles(e){return e==null?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>oe&&t.measures.visibility===U.VISIBLE_ON_SURFACE)}};function ae({lij:[e,t,n],extent:a}){return new O(`${e}/${t}/${n}`,e,t,n,a)}i([s({readOnly:!0})],h.prototype,"tiles",null),i([s({readOnly:!0})],h.prototype,"tilesCoveringView",null),i([s({readOnly:!0})],h.prototype,"tileInfo",null),i([s({readOnly:!0})],h.prototype,"tileSize",null),i([s({constructOnly:!0})],h.prototype,"view",void 0),i([s()],h.prototype,"pointOfInterest",void 0),i([s()],h.prototype,"_effectivePointOfInterest",null),h=i([w("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],h);const oe=50,C="feature-tiles";let S=class extends re{constructor(e){super(e),this._handles=new A}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(V(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(r=>{e.set(r.data.id,r.featureCount)}),this._debugInfo.pendingTiles.forEach(r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state)});const n=r=>{const l=t.get(r),o=e.get(r)??"?";return l?`${l}:${o}
${r}`:`store:${o}
${r}`},a=new Map;return this._debugInfo.storedTiles.forEach(r=>{a.set(r.data.id,r.data)}),this._debugInfo.pendingTiles.forEach(r=>{a.set(r.data.id,r.data)}),Array.from(a.values()).map(r=>({lij:[r.level,r.row,r.col],geometry:j.fromExtent(J(r.extent,this.view.spatialReference)),label:n(r.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};i([s({constructOnly:!0})],S.prototype,"handle",void 0),S=i([w("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],S);let u=class extends F{get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const n=[];for(const{points:a}of t)for(const{z:r}of a)n.push(r);return{elevations:n,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new le(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const n=this._serviceInfoFromLayer(e.layer);if(n==null)return;const a={configuration:this._convertConfiguration(e.configuration),serviceInfo:n,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const n=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const n=e.point,a={distance:e.distance,mode:e.mode,point:D(n[0],n[1],n[2],e.coordinateHelper.spatialReference.toJSON()),returnEdge:e.returnEdge,returnVertex:e.returnVertex,filter:e.filter!=null?e.filter.toJSON():null};return this._workerHandle.invoke(a,t)}async updateTiles(e,t){const n={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){const n=this._editId++,a={id:n};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",a,t));const r=await this.updatingHandles.addPromise(Z(e.result,t)),l={id:n,edits:{addedFeatures:r.addedFeatures?.map(({objectId:o})=>o).filter(k)??[],deletedFeatures:r.deletedFeatures?.map(({objectId:o,globalId:d})=>({objectId:o,globalId:d}))??[],updatedFeatures:r.updatedFeatures?.map(({objectId:o})=>o).filter(k)??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",l,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fields:e.fields.map(t=>t.toJSON()),geometryType:q.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}};i([s({constructOnly:!0})],u.prototype,"schedule",void 0),i([s({constructOnly:!0})],u.prototype,"hasZ",void 0),i([s({constructOnly:!0})],u.prototype,"elevationAlignPointsInFeatures",void 0),i([s({constructOnly:!0})],u.prototype,"queryForSymbologySnapping",void 0),i([s({readOnly:!0})],u.prototype,"updating",null),i([s({readOnly:!0})],u.prototype,"availability",void 0),i([s()],u.prototype,"_workerHandleUpdating",void 0),u=i([w("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],u);class le extends L{constructor(t,n){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:n})}}let g=class extends I{get tiles(){return[new O("0/0/0",0,0,0,W(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new G({origin:new B({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new Q({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};i([s({readOnly:!0})],g.prototype,"tiles",null),i([s({readOnly:!0})],g.prototype,"tileInfo",null),i([s({readOnly:!0})],g.prototype,"tileSize",null),i([s({constructOnly:!0})],g.prototype,"layer",void 0),i([s()],g.prototype,"pointOfInterest",void 0),g=i([w("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],g);let p=class extends K(I){get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this._workerHandle?.updating||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=e!=null?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._workerHandle=null,this._debug=null}initialize(){let e;const t=this.view;if(t!=null)switch(t.type){case"2d":this._tilesOfInterest=new c({view:t,layer:this._layer}),e=this._workerHandle=new u;break;case"3d":{const{resourceController:n}=t,a=this._layer,r=t.whenLayerView(a);this._tilesOfInterest=new h({view:t}),e=this._workerHandle=new u({schedule:o=>n.immediate.schedule(o),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(o,d)=>{const m=await r;return H(d),m.elevationAlignPointsInFeatures(o,d)},queryForSymbologySnapping:async(o,d)=>{const m=await r;return H(d),m.queryForSymbologySnapping(o,d)}});const l=X(null);r.then(o=>l.value=o),this.addHandles([t.elevationProvider.on("elevation-change",({context:o})=>{const{elevationInfo:d}=a;te(o,d)&&y(e.notifyElevationSourceChange())}),f(()=>a.elevationInfo,()=>y(e.notifyElevationSourceChange()),v),f(()=>l.value?.processor?.renderer,()=>y(e.notifySymbologyChange()),v),f(()=>l.value?.symbologySnappingSupported??!1,o=>y(e.setSymbologySnappingSupported(o)),v),Y(()=>l.value?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}else this._tilesOfInterest=new g({layer:this._layer}),e=this._workerHandle=new u;this.handles.add([T(e)]),y(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this.updatingHandles.add(()=>this._updateTilesParameters,()=>y(e.updateTiles(this._updateTilesParameters,null)),v),this.handles.add([f(()=>this.configuration,n=>y(e.configure(n,null)),E)]),t!=null&&this.handles.add(f(()=>ee.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,n=>{n&&!this._debug?(this._debug=new S({view:t,handle:e}),this.handles.add(T(this._debug),"debug")):!n&&this._debug&&this.handles.remove("debug")},v)),this.handles.add(this.layerSource.layer.on("apply-edits",n=>{y(e.applyEdits(n,null))}))}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:n,point:a}=e;this._tilesOfInterest.pointOfInterest=n.arrayToPoint(a);const r=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(l=>ie(l,r))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return ne(this.view)}};i([s({constructOnly:!0})],p.prototype,"spatialReference",void 0),i([s({constructOnly:!0})],p.prototype,"layerSource",void 0),i([s({constructOnly:!0})],p.prototype,"view",void 0),i([s()],p.prototype,"_tilesOfInterest",void 0),i([s({readOnly:!0})],p.prototype,"_updateTilesParameters",null),i([s({readOnly:!0})],p.prototype,"updating",null),i([s({readOnly:!0})],p.prototype,"configuration",null),i([s({readOnly:!0})],p.prototype,"availability",null),i([s()],p.prototype,"_getGroundElevation",null),p=i([w("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],p);export{p as FeatureServiceSnappingSource};
