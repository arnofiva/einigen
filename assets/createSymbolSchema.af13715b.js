import{E as c,S}from"./TileInfoView.86066260.js";import{f as h,_ as V,A as b}from"./SymbolProcessor.ecdaf067.js";import"./index.da161cf1.js";import"./cimAnalyzer.067ae81b.js";import"./BidiEngine.725a17e4.js";import"./TileClipper.f7503fb7.js";import"./definitions.c3f2bf92.js";import"./number.bbe84298.js";import"./diffUtils.f0876598.js";import"./Pipeline.3be33139.js";import"./QueryEngine.f42b4b13.js";import"./normalizeUtils.54c24a4d.js";import"./normalizeUtilsCommon.87227ae2.js";import"./WhereClause.c0b1e923.js";import"./executionError.10e29c03.js";import"./json.7bed7e43.js";import"./QueryEngineCapabilities.a6a6a20b.js";import"./utils.8873e24e.js";import"./generateRendererUtils.e8dfecdf.js";import"./FieldsIndex.09813895.js";import"./StreamFeatureManager.ae72b5b8.js";import"./quickselect.b8e0afc3.js";import"./arcadeTimeUtils.65bae7d6.js";import"./centroid.66ea1f85.js";import"./ogcFeatureUtils.c15e0a84.js";import"./geojson.91d0658d.js";import"./clientSideDefaults.f7f5ffde.js";import"./defaultsJSON.a416f32c.js";import"./query.22cd43bf.js";import"./pbfQueryUtils.c4418ce7.js";import"./pbf.82c57b62.js";import"./queryZScale.2643e684.js";import"./Query.e586665e.js";import"./createConnection.6a562f88.js";import"./geohashUtils.a46ddc15.js";import"./tileUtils.44ddca3d.js";import"./TurboLine.a8fd7711.js";import"./Rect.5473b346.js";import"./GeometryUtils.020b8d8a.js";function u(e){return e.type==="line-marker"?{type:"line-marker",color:e.color?.toJSON(),placement:e.placement,style:e.style}:e.constructor.fromJSON(e.toJSON()).toJSON()}function y(e){return b(e)}function pe(e,r,t=!1){if(!e)return null;switch(e.type){case"simple-fill":case"picture-fill":return x(e,r,t);case"simple-marker":case"picture-marker":return g(e,r,t);case"simple-line":return K(e,r,t);case"text":return z(e,r,t);case"label":return d(e,r,t);case"cim":return{type:"cim",rendererKey:r.vvFlags,data:e.data,maxVVSize:r.maxVVSize};case"CIMSymbolReference":return{type:"cim",rendererKey:r.vvFlags,data:e,maxVVSize:r.maxVVSize};case"web-style":return{...u(e),type:"web-style",hash:e.hash(),rendererKey:r.vvFlags,maxVVSize:r.maxVVSize};default:throw new Error(`symbol not supported ${e.type}`)}}function d(e,r,t){const o=e.toJSON(),i=h(c.LABEL,{...r,placement:o.labelPlacement});return{materialKey:t?y(i):i,hash:e.hash(),...o,labelPlacement:o.labelPlacement}}function x(e,r,t){const o=h(c.FILL,r),i=t?y(o):o,m=e.clone(),a=m.outline,n=V(r.symbologyType);n||(m.outline=null);const s={materialKey:i,hash:m.hash(),...u(m)};if(n)return s;const l=[];if(l.push(s),a){const p=h(c.LINE,{...r,isOutline:!0}),f={materialKey:t?y(p):p,hash:a.hash(),...u(a)};l.push(f)}return{type:"composite-symbol",layers:l,hash:l.reduce((p,f)=>f.hash+p,"")}}function K(e,r,t){const o=V(r.symbologyType)?S.DEFAULT:r.symbologyType,i=h(c.LINE,{...r,symbologyType:o}),m=t?y(i):i,a=e.clone(),n=a.marker;a.marker=null;const s=[];if(s.push({materialKey:m,hash:a.hash(),...u(a)}),n){const l=h(c.MARKER,r),p=t?y(l):l;n.color=n.color??a.color,s.push({materialKey:p,hash:n.hash(),lineWidth:a.width,...u(n)})}return{type:"composite-symbol",layers:s,hash:s.reduce((l,p)=>p.hash+l,"")}}function g(e,r,t){const o=h(c.MARKER,r),i=t?y(o):o,m=u(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}function z(e,r,t){const o=h(c.TEXT,r),i=t?y(o):o,m=u(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}export{pe as createSymbolSchema};
