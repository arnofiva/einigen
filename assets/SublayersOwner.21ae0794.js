import{e as a,y as n,L as g,Y as H,dZ as Y,e2 as z,I as ee,a as k,b_ as te,al as B,f2 as y,dT as Q,bZ as $,dW as re,d4 as ie,c_ as se,dQ as ae,i as oe,a3 as m,sX as le,ao as ne,sY as pe,au as w,N as ye,V as U,p9 as ue,E as P,cd as de,X as D,J as R,Q as ce,T as V,Z as v,e3 as fe,_ as W,M as he,jL as E,dJ as be,lu as me,q as ge,U as Se,sZ as Ie}from"./index.da161cf1.js";import{c as G}from"./portalItemUtils.ea6f2bf4.js";import"./UniqueValueRenderer.0143139a.js";import{p as ve,n as we}from"./jsonUtils.4745b876.js";import{n as Ee}from"./sql.414b1952.js";import{x as Le}from"./QueryTask.3d449f5b.js";import{n as xe}from"./FeatureType.4659b5f1.js";import{r as Oe}from"./FieldsIndex.09813895.js";import{C as Te}from"./LabelClass.1c6b8047.js";import{c as _e}from"./labelingInfo.990e68e3.js";import{n as De,p as Fe}from"./serviceCapabilitiesUtils.c358c66d.js";import{c as q,b as Pe,K}from"./Query.e586665e.js";import{c as Ae}from"./AttachmentQuery.c430db32.js";import{p as Ve}from"./popupUtils.f5ffced0.js";import{o as Me}from"./sublayerUtils.e7f91234.js";const ze=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(t,i){const s=i.capabilities&&i.capabilities.split(",").map(Z=>Z.toLowerCase().trim());if(!s)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const o=this.type,p=o!=="tile"&&!!i.supportsDynamicLayers,u=s.includes("query"),c=s.includes("map"),b=!!i.exportTilesAllowed,S=s.includes("tilemap"),L=s.includes("data"),x=o!=="tile"&&(!i.tileInfo||p),O=o!=="tile"&&(!i.tileInfo||p),d=o!=="tile",f=i.cimVersion&&te.parse(i.cimVersion),T=f?.since(1,4)??!1,_=f?.since(2,0)??!1;return{operations:{supportsExportMap:c,supportsExportTiles:b,supportsIdentify:u,supportsQuery:L,supportsTileMap:S},exportMap:c?{supportsArcadeExpressionForLabeling:T,supportsSublayersChanges:d,supportsDynamicLayers:p,supportsSublayerVisibility:x,supportsSublayerDefinitionExpression:O,supportsCIMSymbols:_}:null,exportTiles:b?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(t,i){let s=i.currentVersion;return s||(s=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchRelatedService(t){const i=this.portalItem;if(!i||!G(i))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=i.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},t).then(o=>o.find(p=>p.type==="Feature Service")??null,()=>null));const s=await this._relatedFeatureServicePromise;return B(t),s?{itemId:s.id,url:s.url}:null}async fetchSublayerInfo(t,i){const{source:s}=t;if(this?.portalItem&&this.type==="tile"&&s?.type==="map-layer"&&G(this.portalItem)&&t.originIdOf("url")<y.SERVICE){const u=await this.fetchRelatedService(i);u&&(t.url=Q(u.url,s.mapLayerId.toString()),t.layerItemId=u.itemId)}const{url:o}=t;let p;if(s.type==="data-layer")p=(await $(o,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...i})).data;else if(o&&t.originIdOf("url")>y.SERVICE)try{p=(await this._fetchAllLayersAndTablesFromService(o)).get(s.mapLayerId)}catch{}else{let u=t.id;s?.type==="map-layer"&&(u=s.mapLayerId);try{p=(await this.fetchAllLayersAndTables(i)).get(u)}catch{}}return p}async fetchAllLayersAndTables(t){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,t)}async _fetchAllLayersAndTablesFromService(t,i){await this.load(i),this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const s=re(t),o=ie(this._allLayersAndTablesMap,s?.url.path,()=>$(Q(s?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(u=>{const c=new Map;for(const b of u.data.layers)c.set(b.id,b);return{result:c}},u=>({error:u}))),p=await o;if(B(i),"result"in p)return p.result;throw p.error}};return a([n({readOnly:!0})],r.prototype,"capabilities",void 0),a([g("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),a([n({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),a([n({type:H})],r.prototype,"fullExtent",void 0),a([n(Y)],r.prototype,"id",void 0),a([n({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),a([n(z)],r.prototype,"popupEnabled",void 0),a([n({type:ee})],r.prototype,"spatialReference",void 0),a([n({readOnly:!0})],r.prototype,"version",void 0),a([g("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=a([k("esri.layers.mixins.ArcGISMapService")],r),r};var A;function M(e){return e!=null&&e.type==="esriSMS"}function j(e,r,t){const i=this.originIdOf(r)>=E(t.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!t&&t.layer?.type==="map-image"&&(t.writeSublayerStructure||i)}}function C(e,r,t){return{enabled:!!t&&t.layer?.type==="tile"&&(t.origin&&this.originIdOf(r)>=E(t.origin)||this._isOverridden(r))}}function h(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function F(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=E(t.origin))}}let je=0;const I=new Set;I.add("layer"),I.add("parent"),I.add("loaded"),I.add("loadStatus"),I.add("loadError"),I.add("loadWarnings");let l=A=class extends se(ae(oe(be))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:r,url:t}=this;if(!r&&!t)throw new m("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=r?await r.fetchSublayerInfo(this,e):(await $(t,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service"}))})()),this}readCapabilities(e,r){r=r.layerDefinition||r;const{operations:{supportsQuery:t,supportsQueryAttachments:i},query:{supportsFormatPBF:s},data:{supportsAttachment:o}}=De(r,this.url);return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:t,supportsQueryAttachments:i},data:{supportsAttachment:o},query:{supportsFormatPBF:s}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:r}=this;return{minScale:e,maxScale:r}}get fieldsIndex(){return new Oe(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields){for(const t of r.fields)if(t.type==="esriFieldTypeGlobalID")return t.name}}get id(){return this._get("id")??je++}set id(e){this._get("id")!==e&&(this.layer?.capabilities?.exportMap?.supportsDynamicLayers!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map(s=>s.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(r=>r.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields){for(const t of r.fields)if(t.type==="esriFieldTypeOID")return t.name}}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const t=r.layerDefinition;return 1-.01*((t?.transparency!=null?t.transparency:t?.drawingInfo?.transparency)??0)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=le(this.parent.id):r.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{spatialReference:e}=this.layer,r="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:t,fieldsIndex:i}=this,s=ne("featurelayer-pbf")&&t?.query.supportsFormatPBF,o=t?.operations?.supportsQueryAttachments??!1;return new Le({url:this.url,pbfSupported:s,fieldsIndex:i,gdbVersion:r,sourceSpatialReference:e,queryAttachmentsSupported:o})}set renderer(e){if(e){for(const r of e.getSymbols())if(pe(r)){w.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new q({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return ye(U.ofType(A),e)}writeSublayers(e,r,t){this.sublayers?.length&&(r[t]=this.sublayers.map(i=>i.id).toArray().reverse())}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const i=r.fields.find(s=>s.name.toLowerCase()===t);i&&(t=i.name)}return t}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,r=this.source;if(!e)return null;if(this._lastParsedUrl=e,r?.type==="map-layer")return`${e.path}/${r.mapLayerId}`;const t={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${ue(t)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=P(this),r=new A;return P(r).store=e.clone(I),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return Ve(this,e)}createQuery(){return new Pe({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const{layer:e}=this,r=e?.parsedUrl,t=new(await de(()=>import("./FeatureLayer.6ea98f03.js"),["assets/FeatureLayer.6ea98f03.js","assets/index.da161cf1.js","assets/index.8db76e31.css","assets/UniqueValueRenderer.0143139a.js","assets/ColorStop.f762bde8.js","assets/diffUtils.f0876598.js","assets/colorRamps.80cb140e.js","assets/jsonUtils.4745b876.js","assets/DictionaryLoader.90c8c47c.js","assets/FieldsIndex.09813895.js","assets/heatmapUtils.32e9a30b.js","assets/sql.414b1952.js","assets/FeatureLayerBase.07ef7e55.js","assets/featureLayerUtils.0566dc37.js","assets/AttachmentQuery.c430db32.js","assets/Query.e586665e.js","assets/RelationshipQuery.60e2b826.js","assets/serviceCapabilitiesUtils.c358c66d.js","assets/editsZScale.58b9a03e.js","assets/queryZScale.2643e684.js","assets/FeatureSet.97dc0f24.js","assets/APIKeyMixin.605900a3.js","assets/ArcGISService.116191b2.js","assets/BlendLayer.eacc4944.js","assets/jsonUtils.1c231e28.js","assets/CustomParametersMixin.244652a9.js","assets/EditBusLayer.3831f0f2.js","assets/FeatureEffectLayer.a9b039ed.js","assets/FeatureEffect.ee83c7e0.js","assets/FeatureFilter.97dd33dd.js","assets/FeatureReductionLayer.9f7296a1.js","assets/LabelClass.1c6b8047.js","assets/defaults.83793da7.js","assets/defaultsJSON.a416f32c.js","assets/OrderedLayer.bbc75e49.js","assets/PortalLayer.9c2e677f.js","assets/portalItemUtils.ea6f2bf4.js","assets/ScaleRangeLayer.1a5bb9a6.js","assets/TemporalLayer.5874b62b.js","assets/FeatureTemplate.c7eaa370.js","assets/FeatureType.4659b5f1.js","assets/fieldProperties.174d0f24.js","assets/labelingInfo.990e68e3.js","assets/versionUtils.05c8a355.js","assets/styleUtils.a985c9a8.js","assets/TopFeaturesQuery.165d1927.js","assets/popupUtils.f5ffced0.js"])).default({url:r?.path});return r&&this.source&&(this.source.type==="map-layer"?t.layerId=this.source.mapLayerId:t.dynamicDataSource=this.source),e?.refreshInterval!=null&&(t.refreshInterval=e.refreshInterval),this.definitionExpression&&(t.definitionExpression=this.definitionExpression),this.floorInfo&&(t.floorInfo=D(this.floorInfo)),this.originIdOf("labelingInfo")>y.SERVICE&&(t.labelingInfo=D(this.labelingInfo)),this.originIdOf("labelsVisible")>y.DEFAULTS&&(t.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>y.DEFAULTS&&(t.legendEnabled=this.legendEnabled),this.originIdOf("visible")>y.DEFAULTS&&(t.visible=this.visible),this.originIdOf("minScale")>y.DEFAULTS&&(t.minScale=this.minScale),this.originIdOf("maxScale")>y.DEFAULTS&&(t.maxScale=this.maxScale),this.originIdOf("opacity")>y.DEFAULTS&&(t.opacity=this.opacity),this.originIdOf("popupTemplate")>y.DEFAULTS&&(t.popupTemplate=D(this.popupTemplate)),this.originIdOf("renderer")>y.SERVICE&&(t.renderer=D(this.renderer)),this.source?.type==="data-layer"&&(t.dynamicDataSource=this.source.clone()),this.originIdOf("title")>y.DEFAULTS&&(t.title=this.title),e?.type==="map-image"&&e.originIdOf("customParameters")>y.DEFAULTS&&(t.customParameters=e.customParameters),e?.type==="tile"&&e.originIdOf("customParameters")>y.DEFAULTS&&(t.customParameters=e.customParameters),t}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(i==null)return null;let s=null;return t?.some(o=>{const{id:p}=o;return p!=null&&(p.toString()===i.toString()&&(s=o),!!s)}),s}getFieldDomain(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const s=i.domains&&i.domains[e];if(s&&s.type!=="inherited")return s}return this._getLayerDomain(e)}async queryAttachments(e,r){await this.load(),e=Ae.from(e);const t=this.capabilities;if(!t?.data?.supportsAttachment)throw new m("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:o,num:p,size:u,start:c,where:b}=e;if(!t?.operations?.supportsQueryAttachments&&(i?.length>0||o?.length>0||u?.length>0||p||c||b))throw new m("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(s?.length||o?.length||b))throw new m("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,r)}async queryFeatures(e=this.createQuery(),r){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new m("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new m("queryFeatures:not-supported","this layer has no url.");const t=await this.queryTask.execute(e,{...r,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(t?.features)for(const i of t.features)i.sourceLayer=this;return t}toExportImageJSON(e){const r={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},t=Ee(e,this.definitionExpression);t!=null&&(r.definitionExpression=t);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((o,p)=>(o[p]=this.originIdOf(p),o),{});if(Object.keys(i).some(o=>i[o]>y.SERVICE)){const o=r.drawingInfo={};if(i.renderer>y.SERVICE&&(o.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>y.SERVICE&&(o.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>y.SERVICE){!this.loaded&&this.labelingInfo.some(u=>!u.labelPlacement)&&w.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let p=this.labelingInfo;this.geometryType!=null&&(p=_e(this.labelingInfo,R.toJSON(this.geometryType))),o.labelingInfo=p.filter(u=>u.labelPlacement).map(u=>u.toJSON({origin:"service",layer:this.layer})),o.showLabels=!0}i.opacity>y.SERVICE&&(o.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(o.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,r=>{r.color||r.style!=="esriSMSX"&&r.style!=="esriSMSCross"||(r.outline&&r.outline.color?r.color=r.outline.color:r.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,r){if(e){const t=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const i of t)M(i.symbol)&&r(i.symbol);"symbol"in e&&M(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&M(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const t=this.layer,i=this._get(e);let s,o;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",o="supportsModification"}const p=P(this).getDefaultOrigin();if(p!=="service"){if(s&&this.layer?.capabilities?.exportMap?.[s]===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(o&&this.capabilities?.exportMap[o]===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${o}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,r),p!=="service"&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach(t=>{t.parent=null,t.layer=null}),this.handles.removeAll()),e&&(e.forEach(t=>{t.parent=this,t.layer=this.layer}),this.handles.add([e.on("after-add",({item:t})=>{t.parent=this,t.layer=this.layer}),e.on("after-remove",({item:t})=>{t.parent=null,t.layer=null}),e.on("before-changes",t=>{const i=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;i==null||i||(w.getLogger(this).error(new m("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),t.preventDefault())})]))}_logLockedError(e,r){const{layer:t,declaredClass:i}=this;w.getLogger(i).error(new m("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${t?.id}'`,{reason:r,sublayer:this,layer:t}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};l.test={isMapImageLayerOverridePolicy:e=>e===h||e===j,isTileImageLayerOverridePolicy:e=>e===C},a([n({readOnly:!0})],l.prototype,"capabilities",void 0),a([g("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],l.prototype,"readCapabilities",null),a([n()],l.prototype,"defaultPopupTemplate",null),a([n({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:j}}})],l.prototype,"definitionExpression",null),a([n({readOnly:!0})],l.prototype,"effectiveScaleRange",null),a([n({type:[ce],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],l.prototype,"fields",void 0),a([n({readOnly:!0})],l.prototype,"fieldsIndex",null),a([n({type:Fe,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:j},origins:{"web-scene":{read:!1,write:!1}}}})],l.prototype,"floorInfo",null),a([n({type:H,json:{read:{source:"layerDefinition.extent"}}})],l.prototype,"fullExtent",void 0),a([n({type:R.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:R.read}}}}})],l.prototype,"geometryType",void 0),a([n({type:String})],l.prototype,"globalIdField",void 0),a([g("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],l.prototype,"readGlobalIdFieldFromService",null),a([n({type:V,json:{write:{ignoreOrigin:!0}}})],l.prototype,"id",null),a([n({value:null,type:[Te],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:h}}})],l.prototype,"labelingInfo",null),a([v("labelingInfo")],l.prototype,"writeLabelingInfo",null),a([n({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:h}}})],l.prototype,"labelsVisible",null),a([n({value:null})],l.prototype,"layer",null),a([n({type:String,json:{write:{overridePolicy:C}}})],l.prototype,"layerItemId",void 0),a([n({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:F}}})],l.prototype,"legendEnabled",void 0),a([n({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],l.prototype,"listMode",null),a([n({type:Number,value:0,json:{write:{overridePolicy:h}}})],l.prototype,"minScale",null),a([g("minScale",["minScale","layerDefinition.minScale"])],l.prototype,"readMinScale",null),a([n({type:Number,value:0,json:{write:{overridePolicy:h}}})],l.prototype,"maxScale",null),a([g("maxScale",["maxScale","layerDefinition.maxScale"])],l.prototype,"readMaxScale",null),a([n({type:String})],l.prototype,"objectIdField",void 0),a([g("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],l.prototype,"readObjectIdFieldFromService",null),a([n({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:h}}})],l.prototype,"opacity",null),a([g("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],l.prototype,"readOpacity",null),a([v("opacity")],l.prototype,"writeOpacity",null),a([n({json:{type:V,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:h}}})],l.prototype,"parent",void 0),a([v("parent")],l.prototype,"writeParent",null),a([n({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:F,writer(e,r,t){r[t]=!e}}}})],l.prototype,"popupEnabled",void 0),a([n({type:fe,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:F}}})],l.prototype,"popupTemplate",void 0),a([n({readOnly:!0})],l.prototype,"queryTask",null),a([n({types:ve,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:h},origins:{"web-scene":{types:we,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:h}}}}})],l.prototype,"renderer",null),a([n({types:{key:"type",base:null,typeMap:{"data-layer":K,"map-layer":q}},cast(e){if(e){if("mapLayerId"in e)return W(q,e);if("dataSource"in e)return W(K,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:h}}})],l.prototype,"source",null),a([n()],l.prototype,"sourceJSON",void 0),a([n({value:null,json:{type:[V],write:{target:"subLayerIds",allowNull:!0,overridePolicy:h}}})],l.prototype,"sublayers",null),a([he("sublayers")],l.prototype,"castSublayers",null),a([v("sublayers")],l.prototype,"writeSublayers",null),a([n({type:String,json:{name:"name",write:{overridePolicy:F}}})],l.prototype,"title",void 0),a([n({type:String})],l.prototype,"typeIdField",void 0),a([g("typeIdField",["layerDefinition.typeIdField"])],l.prototype,"readTypeIdField",null),a([n({type:[xe],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],l.prototype,"types",void 0),a([n({type:String,json:{name:"layerUrl",write:{overridePolicy:C}}})],l.prototype,"url",null),a([n({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:h}}})],l.prototype,"visible",null),a([v("visible")],l.prototype,"writeVisible",null),l=A=a([k("esri.layers.support.Sublayer")],l);const J=l,Ce=w.getLogger("esri.layers.TileLayer");function Ne(e,r){const t=[],i={};return e&&e.forEach(s=>{const o=new J;if(o.read(s,r),i[o.id]=o,s.parentLayerId!=null&&s.parentLayerId!==-1){const p=i[s.parentLayerId];p.sublayers||(p.sublayers=[]),p.sublayers.unshift(o)}else t.unshift(o)}),t}const N=U.ofType(J);function X(e,r){e&&e.forEach(t=>{r(t),t.sublayers&&t.sublayers.length&&X(t.sublayers,r)})}const et=e=>{let r=class extends e{constructor(...t){super(...t),this.allSublayers=new me({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.sublayers}),this.sublayersSourceJSON={[y.SERVICE]:{},[y.PORTAL_ITEM]:{},[y.WEB_SCENE]:{},[y.WEB_MAP]:{}},this.addHandles(ge(()=>this.sublayers,(i,s)=>this._handleSublayersChange(i,s),Se))}destroy(){this.allSublayers.destroy()}readSublayers(t,i){if(!i||!t)return;const{sublayersSourceJSON:s}=this,o=E(i.origin);if(o<y.SERVICE||(s[o]={context:i,visibleLayers:t.visibleLayers||s[o].visibleLayers,layers:t.layers||s[o].layers},o>y.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:p,origin:u}=this.createSublayersForOrigin("web-document"),c=P(this);c.setDefaultOrigin(u),this._set("sublayers",new N(p)),c.setDefaultOrigin("user")}findSublayerById(t){return this.allSublayers.find(i=>i.id===t)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(t){const i=E(t==="web-document"?"web-map":t);let s=y.SERVICE,o=this.sublayersSourceJSON[y.SERVICE].layers,p=this.sublayersSourceJSON[y.SERVICE].context,u=null;const c=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(d=>d<=i);for(const d of c){const f=this.sublayersSourceJSON[d];Me(f.layers)&&(s=d,o=f.layers,p=f.context,f.visibleLayers&&(u={visibleLayers:f.visibleLayers,context:f.context}))}const b=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(d=>d>s&&d<=i);let S=null;for(const d of b){const{layers:f,visibleLayers:T,context:_}=this.sublayersSourceJSON[d];f&&(S={layers:f,context:_}),T&&(u={visibleLayers:T,context:_})}const L=Ne(o,p),x=new Map,O=new Set;if(S)for(const d of S.layers)x.set(d.id,d);if(u?.visibleLayers)for(const d of u.visibleLayers)O.add(d);return X(L,d=>{S&&d.read(x.get(d.id),S.context),u&&d.read({defaultVisibility:O.has(d.id)},u.context)}),{origin:Ie(s),sublayers:new N({items:L})}}read(t,i){super.read(t,i),this.readSublayers(t,i)}_handleSublayersChange(t,i){i&&(i.forEach(s=>{s.parent=null,s.layer=null}),this.removeHandles("sublayers-owner")),t&&(t.forEach(s=>{s.parent=this,s.layer=this}),this.addHandles([t.on("after-add",({item:s})=>{s.parent=this,s.layer=this}),t.on("after-remove",({item:s})=>{s.parent=null,s.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(t.on("before-changes",s=>{Ce.error(new m("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),s.preventDefault()}),"sublayers-owner"))}};return a([n({readOnly:!0})],r.prototype,"allSublayers",void 0),a([n({readOnly:!0,type:U.ofType(J)})],r.prototype,"serviceSublayers",void 0),a([n({value:null,type:N,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),a([n({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=a([k("esri.layers.mixins.SublayersOwner")],r),r};export{et as E,J as Y,ze as f};
