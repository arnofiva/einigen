import{W as C,e as v,G as I,y as g,a as S,H as F,au as B}from"./index.da161cf1.js";const q=new C({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),w=new C({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let V=class extends F{constructor(t){super(t),this.type="class-breaks-definition",this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null}set standardDeviationInterval(t){this.classificationMethod==="standard-deviation"&&this._set("standardDeviationInterval",t)}set definedInterval(t){this.classificationMethod==="defined-interval"&&this._set("definedInterval",t)}};v([I({classBreaksDef:"class-breaks-definition"})],V.prototype,"type",void 0),v([g({json:{write:!0}})],V.prototype,"breakCount",void 0),v([g({json:{write:!0}})],V.prototype,"classificationField",void 0),v([g({type:String,json:{read:q.read,write:q.write}})],V.prototype,"classificationMethod",void 0),v([g({json:{write:!0}})],V.prototype,"normalizationField",void 0),v([g({json:{read:w.read,write:w.write}})],V.prototype,"normalizationType",void 0),v([g({value:null,json:{write:!0}})],V.prototype,"standardDeviationInterval",null),v([g({value:null,json:{write:!0}})],V.prototype,"definedInterval",null),V=v([S("esri.rest.support.ClassBreaksDefinition")],V);const A=V,N=B.getLogger("esri.rest.support.generateRendererUtils");function M(t,r){return Number(t.toFixed(r))}function G(t){const{normalizationTotal:r}=t;return{classBreaks:j(t),normalizationTotal:r}}function j(t){const r=t.definition,{classificationMethod:n,normalizationType:s,definedInterval:h}=r,f=r.breakCount??1,u=[];let l=t.values;if(l.length===0)return[];l=l.sort((i,c)=>i-c);const d=l[0],m=l[l.length-1];if(n==="equal-interval")if(l.length>=f){const i=(m-d)/f;let c=d;for(let a=1;a<f;a++){const e=M(d+a*i,6);u.push({minValue:c,maxValue:e,label:b(c,e,s)}),c=e}u.push({minValue:c,maxValue:m,label:b(c,m,s)})}else l.forEach(i=>{u.push({minValue:i,maxValue:i,label:b(i,i,s)})});else if(n==="natural-breaks"){const i=D(l),c=t.valueFrequency||i.valueFrequency,a=$(i.uniqueValues,c,f);let e=d;for(let o=1;o<f;o++)if(i.uniqueValues.length>o){const p=M(i.uniqueValues[a[o]],6);u.push({minValue:e,maxValue:p,label:b(e,p,s)}),e=p}u.push({minValue:e,maxValue:m,label:b(e,m,s)})}else if(n==="quantile")if(l.length>=f&&d!==m){let i=d,c=Math.ceil(l.length/f),a=0;for(let e=1;e<f;e++){let o=c+a-1;o>l.length&&(o=l.length-1),o<0&&(o=0),u.push({minValue:i,maxValue:l[o],label:b(i,l[o],s)}),i=l[o],a+=c,c=Math.ceil((l.length-a)/(f-e))}u.push({minValue:i,maxValue:m,label:b(i,m,s)})}else{let i=-1;for(let c=0;c<l.length;c++){const a=l[c];a!==i&&(i=a,u.push({minValue:i,maxValue:a,label:b(i,a,s)}),i=a)}}else if(n==="standard-deviation"){const i=L(l),c=_(l,i);if(c===0)u.push({minValue:l[0],maxValue:l[0],label:b(l[0],l[0],s)});else{const a=E(d,m,f,i,c)*c;let e=0,o=d;for(let y=f;y>=1;y--){const k=M(i-(y-.5)*a,6);u.push({minValue:o,maxValue:k,label:b(o,k,s)}),o=k,e++}let p=M(i+.5*a,6);u.push({minValue:o,maxValue:p,label:b(o,p,s)}),o=p,e++;for(let y=1;y<=f;y++)p=e===2*f?m:M(i+(y+.5)*a,6),u.push({minValue:o,maxValue:p,label:b(o,p,s)}),o=p,e++}}else if(n==="defined-interval"){if(!h)return u;const i=l[0],c=l[l.length-1],a=Math.ceil((c-i)/h);let e=i;for(let o=1;o<a;o++){const p=M(i+o*h,6);u.push({minValue:e,maxValue:p,label:b(e,p,s)}),e=p}u.push({minValue:e,maxValue:c,label:b(e,c,s)})}return u}function b(t,r,n){let s=null;return s=t===r?n&&n==="percent-of-total"?t+"%":t.toString():n&&n==="percent-of-total"?t+"% - "+r+"%":t+" - "+r,s}function D(t){const r=[],n=[];let s=Number.MIN_VALUE,h=1,f=-1;for(let u=0;u<t.length;u++){const l=t[u];l===s?(h++,n[f]=h):l!==null&&(r.push(l),s=l,h=1,n.push(h),f++)}return{uniqueValues:r,valueFrequency:n}}function $(t,r,n){const s=t.length,h=[];n>s&&(n=s);for(let u=0;u<n;u++)h.push(Math.round(u*s/n-1));h.push(s-1);let f=z(h,t,r,n);return T(f.mean,f.sdcm,h,t,r,n)&&(f=z(h,t,r,n)),h}function z(t,r,n,s){let h=[],f=[],u=[],l=0;const d=[],m=[];for(let e=0;e<s;e++){const o=x(e,t,r,n);d.push(o.sbMean),m.push(o.sbSdcm),l+=m[e]}let i,c=l,a=!0;for(;a||l<c;){a=!1,h=[];for(let e=0;e<s;e++)h.push(t[e]);for(let e=0;e<s;e++)for(let o=t[e]+1;o<=t[e+1];o++)if(i=r[o],e>0&&o!==t[e+1]&&Math.abs(i-d[e])>Math.abs(i-d[e-1]))t[e]=o;else if(e<s-1&&t[e]!==o-1&&Math.abs(i-d[e])>Math.abs(i-d[e+1])){t[e+1]=o-1;break}c=l,l=0,f=[],u=[];for(let e=0;e<s;e++){f.push(d[e]),u.push(m[e]);const o=x(e,t,r,n);d[e]=o.sbMean,m[e]=o.sbSdcm,l+=m[e]}}if(l>c){for(let e=0;e<s;e++)t[e]=h[e],d[e]=f[e],m[e]=u[e];l=c}return{mean:d,sdcm:m}}function T(t,r,n,s,h,f){let u=0,l=0,d=0,m=0,i=!0;for(let c=0;c<2&&i;c++){c===0&&(i=!1);for(let a=0;a<f-1;a++)for(;n[a+1]+1!==n[a+2];){n[a+1]=n[a+1]+1;const e=x(a,n,s,h);d=e.sbMean,u=e.sbSdcm;const o=x(a+1,n,s,h);if(m=o.sbMean,l=o.sbSdcm,!(u+l<r[a]+r[a+1])){n[a+1]=n[a+1]-1;break}r[a]=u,r[a+1]=l,t[a]=d,t[a+1]=m,i=!0}for(let a=f-1;a>0;a--)for(;n[a]!==n[a-1]+1;){n[a]=n[a]-1;const e=x(a-1,n,s,h);d=e.sbMean,u=e.sbSdcm;const o=x(a,n,s,h);if(m=o.sbMean,l=o.sbSdcm,!(u+l<r[a-1]+r[a])){n[a]=n[a]+1;break}r[a-1]=u,r[a]=l,t[a-1]=d,t[a]=m,i=!0}}return i}function E(t,r,n,s,h){let f=Math.max(s-t,r-s)/h/n;return f=f>=1?1:f>=.5?.5:.25,f}function L(t){let r=0;for(let n=0;n<t.length;n++)r+=t[n];return r/=t.length,r}function _(t,r){let n=0;for(let s=0;s<t.length;s++){const h=t[s];n+=(h-r)*(h-r)}return n/=t.length,Math.sqrt(n)}function x(t,r,n,s){let h=0,f=0;for(let d=r[t]+1;d<=r[t+1];d++){const m=s[d];h+=n[d]*m,f+=m}f<=0&&N.warn("Exception in Natural Breaks calculation");const u=h/f;let l=0;for(let d=r[t]+1;d<=r[t+1];d++)l+=s[d]*(n[d]-u)**2;return{sbMean:u,sbSdcm:l}}export{G as a,A as d};
